openapi: 3.0.3
info:
    title: Audiobookshelf API
    version: 1.0.0
servers:
    -
        url: https://api.example.com
paths:
    /login:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            tags:
                - Server
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                    description: Success
                '401':
                    description: Invalid username or password.
            operationId: login
            summary: Logs in a client to the server.
            description: Authenticates a user and returns user information, server settings, and source info.
    /logout:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: false
            tags:
                - Server
            responses:
                '200':
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: logout
            summary: Logs out a client from the server.
            description: If the socketId parameter is provided, the server removes the socket from the client list.
    /auth/openid:
        get:
            tags:
                - Server
            parameters:
                -
                    name: code_challenge
                    description: PKCE code_challenge generated from the verifier
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: code_challenge_method
                    description: Must be S256
                    schema:
                        enum:
                            - S256
                        type: string
                    in: query
                    required: true
                -
                    name: response_type
                    description: Only 'code' is supported
                    schema:
                        enum:
                            - code
                        type: string
                    in: query
                    required: true
                -
                    name: redirect_uri
                    description: URL where to redirect after successful login (must be whitelisted)
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: client_id
                    description: Name of your app
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: state
                    description: A randomly generated string that must match in subsequent requests
                    schema:
                        type: string
                    in: query
                    required: true
            responses:
                '302':
                    description: Success, save the state-parameter and follow the redirect
                '400':
                    description: You submitted an invalid parameter
                '500':
                    description: Error in the flow
            operationId: oauth2Authorize
            summary: Start OAuth2 Flow
            description: Starts a standard OAuth2 flow with PKCE (S256) to log the user in using SSO.
    /auth/openid/callback:
        get:
            tags:
                - Server
            parameters:
                -
                    name: state
                    description: The state string generated initially
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: code
                    description: The code received from the SSO provider
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: code_verifier
                    description: The original PKCE verifier used to generate the code_challenge
                    schema:
                        type: string
                    in: query
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthOpenIDCallbackResponse'
                    description: Success, user data in payload
                '302':
                    description: Success, redirect to /login (internal use)
                '400':
                    description: You have no session
                '401':
                    description: Error from the SSO provider
                '500':
                    description: Error in the flow
            operationId: oauth2Callback
            summary: OAuth2 Callback
            description: >-
                Finalizes the OAuth2 flow. Returns user data if redirect_uri was provided, otherwise
                redirects.
    /auth/openid/mobile-redirect:
        get:
            tags:
                - Server
            parameters:
                -
                    name: code
                    description: OAuth2 code
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: state
                    description: OAuth2 state parameter
                    schema:
                        type: string
                    in: query
                    required: true
            responses:
                '302':
                    description: Success
                '400':
                    description: No state or no redirect_uri associated to state
                '500':
                    description: Error in the flow
            operationId: oauth2MobileRedirect
            summary: OAuth2 Mobile Redirect
            description: Redirects from SSO provider to your original redirect_uri.
    /init:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/InitServerRequest'
                required: true
            tags:
                - Server
            responses:
                '200':
                    description: Success
                '500':
                    description: The server has already been initialized.
            operationId: initializeServer
            summary: Initialize the server
            description: Initialize the server with a root user.
    /status:
        get:
            tags:
                - Server
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StatusResponse'
                    description: Success
            operationId: checkStatus
            summary: Check the Server's Status
            description: Returns the server's initialization status.
    /ping:
        get:
            tags:
                - Server
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PingResponse'
                    description: Success
            operationId: pingServer
            summary: Ping the Server
            description: Checks if the server is responding with JSON.
    /healthcheck:
        get:
            tags:
                - Server
            responses:
                '200':
                    description: Success
            operationId: healthcheck
            summary: Healthcheck
            description: Checks if the server is operating.
    /api/libraries:
        get:
            tags:
                - Libraries
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllLibrariesResponse'
                    description: Success
                '401':
                    description: Unauthorized
            security:
                -
                    bearerAuth: []
            operationId: getAllLibraries
            summary: Get All Libraries
            description: Retrieves all libraries accessible to the user.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateLibraryRequest'
                required: true
            tags:
                - Libraries
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LibraryResponse'
                    description: Success
                '401':
                    description: Unauthorized
            security:
                -
                    bearerAuth: []
            operationId: createLibrary
            summary: Create a Library
            description: Creates a library with the specified options.
    /api/libraries/{id}:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: include
                    description: 'Options: filterdata'
                    schema:
                        type: string
                    in: query
                    required: false
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibrary
            summary: Get a Library
            description: Retrieves a library by ID.
        delete:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LibraryResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: deleteLibrary
            summary: Delete a Library
            description: Deletes a library and its items.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLibraryRequest'
                required: true
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LibraryResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: updateLibrary
            summary: Update a Library
            description: Updates a library.
        parameters:
            -
                name: id
                schema:
                    type: string
                in: path
                required: true
    /api/libraries/{id}/items:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    schema:
                        type: integer
                    in: query
                -
                    name: page
                    schema:
                        type: integer
                    in: query
                -
                    name: sort
                    schema:
                        type: string
                    in: query
                -
                    name: desc
                    schema:
                        type: integer
                    in: query
                -
                    name: filter
                    schema:
                        type: string
                    in: query
                -
                    name: minified
                    schema:
                        type: integer
                    in: query
                -
                    name: collapseseries
                    schema:
                        type: integer
                    in: query
                -
                    name: include
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryItemsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryItems
            summary: Get a Library's Items
            description: Returns library items, optionally filtered or sorted.
    /api/libraries/{id}/issues:
        delete:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmptyResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: removeLibraryIssues
            summary: Remove a Library's Items With Issues
            description: Removes all items in a library that have issues.
    /api/libraries/{id}/episode-downloads:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEpisodeDownloadsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryEpisodeDownloads
            summary: Get a Library's Podcast Episode Downloads
            description: Retrieves the current and queued podcast episode downloads.
    /api/libraries/{id}/series:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    schema:
                        type: integer
                    in: query
                    required: true
                -
                    name: page
                    schema:
                        type: integer
                    in: query
                -
                    name: sort
                    schema:
                        type: string
                    in: query
                -
                    name: desc
                    schema:
                        type: integer
                    in: query
                -
                    name: filter
                    schema:
                        type: string
                    in: query
                -
                    name: include
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibrarySeriesResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibrarySeries
            summary: Get a Library's Series
            description: Returns the series in a library.
    /api/libraries/{id}/collections:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    schema:
                        type: integer
                    in: query
                -
                    name: page
                    schema:
                        type: integer
                    in: query
                -
                    name: sort
                    schema:
                        type: string
                    in: query
                -
                    name: desc
                    schema:
                        type: integer
                    in: query
                -
                    name: filter
                    schema:
                        type: string
                    in: query
                -
                    name: minified
                    schema:
                        type: integer
                    in: query
                -
                    name: include
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryCollectionsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryCollections
            summary: Get a Library's Collections
            description: Returns the collections in a library.
    /api/libraries/{id}/playlists:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    schema:
                        type: integer
                    in: query
                -
                    name: page
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryPlaylistsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryPlaylists
            summary: Get a Library's User Playlists
            description: Returns the playlists for the authenticated user within this library.
    /api/libraries/{id}/personalized:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    description: Limit the number of items in each shelf. Default is 10.
                    schema:
                        type: integer
                    in: query
                -
                    name: include
                    description: >-
                        A comma separated list of what to include with the library items. The only current
                        option is rssfeed.
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Shelf'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryPersonalized
            summary: Get a Library's Personalized View
            description: Returns a library's personalized view for home page display.
    /api/libraries/{id}/filterdata:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryFilterDataResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryFilterData
            summary: Get a Library's Filter Data
            description: Returns filter data for use in building filter lists.
    /api/libraries/{id}/search:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: q
                    schema:
                        type: string
                    in: query
                    required: true
                -
                    name: limit
                    description: 'Default: 12'
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchLibraryResponse'
                    description: Success
                '400':
                    description: No query string
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: searchLibrary
            summary: Search a Library
            description: Searches the library for the given query.
    /api/libraries/{id}/stats:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryStatsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryStats
            summary: Get a Library's Stats
            description: Returns statistics about the library.
    /api/libraries/{id}/authors:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryAuthorsResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryAuthors
            summary: Get a Library's Authors
            description: Returns authors in the library.
    /api/libraries/{id}/matchall:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmptyResponse'
                    description: Success (no content)
                '403':
                    description: An admin user is required to match library items.
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: matchAllLibraryItems
            summary: Match All of a Library's Items
            description: Performs a quick match of all items in the library.
    /api/libraries/{id}/scan:
        post:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: force
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmptyResponse'
                    description: Success (no content)
                '403':
                    description: An admin user is required to match library items.
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: scanLibraryFolders
            summary: Scan a Library's Folders
            description: Starts a scan of the library's folders.
    /api/libraries/{id}/recent-episodes:
        get:
            tags:
                - Libraries
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: limit
                    schema:
                        type: integer
                    in: query
                -
                    name: page
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetLibraryRecentEpisodesResponse'
                    description: Success
                '404':
                    description: The user cannot access the library, or no library with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getLibraryRecentEpisodes
            summary: Get a Library's Recent Episodes
            description: Returns the newest unfinished podcast episodes in the library.
    /api/libraries/order:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReorderLibrariesRequest'
                required: true
            tags:
                - Libraries
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReorderLibrariesResponse'
                    description: Success
                '403':
                    description: An admin user is required to match library items.
                '500':
                    description: One or more of the IDs do not match any libraries.
            security:
                -
                    bearerAuth: []
            operationId: reorderLibraries
            summary: Reorder Library List
            description: Changes the displayOrder of the specified libraries.
    /api/items/all:
        delete:
            tags:
                - LibraryItems
            responses:
                '200':
                    description: Success
                '403':
                    description: An admin user is required to delete all library items.
                '500':
                    description: Something went wrong with recreating the library item database.
            security:
                -
                    bearerAuth: []
            operationId: deleteAllItems
            summary: Delete All Library Items
            description: Deletes all library items from the database. No files are deleted.
    /api/items/{id}:
        get:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: expanded
                    schema:
                        type: integer
                    in: query
                -
                    name: include
                    schema:
                        type: string
                    in: query
                -
                    name: episode
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    -
                                        $ref: '#/components/schemas/LibraryItem'
                                    -
                                        $ref: '#/components/schemas/LibraryItemExpanded'
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: getLibraryItem
            summary: Get a Library Item
            description: Retrieves a library item by ID.
        delete:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: deleteLibraryItem
            summary: Delete a Library Item
            description: Deletes a library item from the database. No files are deleted.
        parameters:
            -
                name: id
                schema:
                    type: string
                in: path
                required: true
    /api/items/{id}/media:
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateItemMediaRequest'
                required: true
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateItemMediaResponse'
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: updateItemMedia
            summary: Update a Library Item's Media
            description: Updates a library item's media and returns the updated library item.
    /api/items/{id}/cover:
        get:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: width
                    schema:
                        type: integer
                    in: query
                -
                    name: height
                    schema:
                        type: integer
                    in: query
                -
                    name: format
                    schema:
                        type: string
                    in: query
                -
                    name: raw
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    description: Success (image data)
                '404':
                    description: Either no library item exists with the given ID, or the item does not have a cover.
                '500':
                    description: There was an error when attempting to read the cover file.
            security:
                -
                    bearerAuth: []
            operationId: getItemCover
            summary: Get a Library Item's Cover
            description: Retrieves a library item's cover image.
        post:
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/UploadItemCoverRequest'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UploadItemCoverRequestJson'
                required: true
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadItemCoverResponse'
                    description: Success
                '400':
                    description: The request did not contain a file or URL.
                '403':
                    description: The user does not have permission to upload.
                '500':
                    description: Unknown error.
            security:
                -
                    bearerAuth: []
            operationId: uploadItemCover
            summary: Upload a Library Item Cover
            description: Uploads or downloads a cover image for a library item.
        delete:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: removeItemCover
            summary: Remove a Library Item's Cover
            description: Removes a library item's cover image.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateItemCoverRequest'
                required: true
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateItemCoverResponse'
                    description: Success
                '400':
                    description: The cover parameter is required.
                '500':
                    description: >-
                        Either the submitted path is invalid, does not exist, is not an image, or the server
                        failed to copy the image to the library item's directory.
            security:
                -
                    bearerAuth: []
            operationId: updateItemCover
            summary: Update a Library Item's Cover
            description: Updates a library item's cover with an image already on the server.
    /api/items/{id}/match:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MatchItemRequest'
                required: false
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MatchItemResponse'
                    description: Success
            security:
                -
                    bearerAuth: []
            operationId: matchItem
            summary: Match a Library Item
            description: Matches the library item using quick match.
    /api/items/{id}/play:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PlayItemRequest'
                required: false
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaybackSessionExpanded'
                    description: Success
                '404':
                    description: The library item does not have any audio tracks to play.
            security:
                -
                    bearerAuth: []
            operationId: playItem
            summary: Play a Library Item
            description: Starts a playback session for a library item.
    /api/items/{id}/play/{episodeId}:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PlayItemRequest'
                required: false
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: episodeId
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaybackSessionExpanded'
                    description: Success
                '404':
                    description: The library item does not have any audio tracks to play.
            security:
                -
                    bearerAuth: []
            operationId: playItemEpisode
            summary: Play a Podcast Episode
            description: Starts a playback session for a specific podcast episode.
    /api/items/{id}/tracks:
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateItemTracksRequest'
                required: true
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LibraryItem'
                    description: Success
                '500':
                    description: The library item's media type must be book for this endpoint.
            security:
                -
                    bearerAuth: []
            operationId: updateItemTracks
            summary: Update a Library Item's Audio Tracks
            description: Updates the order/exclude status of a library item's audio files (books only).
    /api/items/{id}/scan:
        post:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ScanItemResponse'
                    description: Success
                '403':
                    description: An admin user is required to scan a library item.
                '500':
                    description: Rescanning file library items is not yet supported.
            security:
                -
                    bearerAuth: []
            operationId: scanItem
            summary: Scan a Library Item
            description: Scans a library item for changes.
    /api/items/{id}/tone-object:
        get:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToneObjectResponse'
                    description: Success
                '403':
                    description: An admin user is required to get a library item's tone metadata object.
                '500':
                    description: The library item has missing parts, does not have audio files, or is not a book.
            security:
                -
                    bearerAuth: []
            operationId: getItemToneObject
            summary: Get a Library Item's Tone Metadata Object
            description: Returns a tone metadata object for the library item.
    /api/items/{id}/chapters:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateItemChaptersRequest'
                required: true
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateItemChaptersResponse'
                    description: Success
                '400':
                    description: The provided chapter list must have a non-zero length.
                '403':
                    description: The user does not have permission to update a library item.
                '500':
                    description: The library item has missing parts, does not have audio files, or is not a book.
            security:
                -
                    bearerAuth: []
            operationId: updateItemChapters
            summary: Update a Library Item's Chapters
            description: Updates a library item's chapters (books only).
    /api/items/{id}/tone-scan/{index}:
        post:
            tags:
                - LibraryItems
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: index
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToneScanResponse'
                    description: Success
                '404':
                    description: >-
                        The library does not have any audio files to scan or the requested audio file index
                        does not exist.
            security:
                -
                    bearerAuth: []
            operationId: toneScanItem
            summary: Tone Scan a Library Item
            description: Scans an audio file of a library item with tone.
    /api/items/batch/delete:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchDeleteItemsRequest'
                required: true
            tags:
                - LibraryItems
            responses:
                '200':
                    description: Success
                '403':
                    description: The user does not have permission to delete library items.
                '404':
                    description: None of the IDs provided match any library items.
                '500':
                    description: The libraryItemIds array must have a non-zero length.
            security:
                -
                    bearerAuth: []
            operationId: batchDeleteItems
            summary: Batch Delete Library Items
            description: Batch deletes library items from the database. No files are deleted.
    /api/items/batch/update:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchUpdateItemsRequest'
                required: true
            tags:
                - LibraryItems
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchUpdateItemsResponse'
                    description: Success
                '403':
                    description: The user does not have permission to update library items.
                '500':
                    description: The provided array must have a non-zero length.
            security:
                -
                    bearerAuth: []
            operationId: batchUpdateItems
            summary: Batch Update Library Items
            description: Batch updates library items.
    /api/items/batch/get:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchGetItemsRequest'
                required: true
            tags:
                - LibraryItems
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchGetItemsResponse'
                    description: Success
                '403':
                    description: The libraryItemIds array must have a non-zero length.
            security:
                -
                    bearerAuth: []
            operationId: batchGetItems
            summary: Batch Get Library Items
            description: Batch retrieves specified library items.
    /api/items/batch/quickmatch:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchQuickMatchItemsRequest'
                required: true
            tags:
                - LibraryItems
            responses:
                '200':
                    description: Success
                '403':
                    description: An admin user is required to quick match library items.
                '500':
                    description: The libraryItemIds array must have a non-zero length.
            security:
                -
                    bearerAuth: []
            operationId: batchQuickMatchItems
            summary: Batch Quick Match Library Items
            description: Batch matches library items using quick match.
    /api/users:
        get:
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllUsersResponse'
                    description: Success
                '403':
                    description: An admin user is required to get all users.
            security:
                -
                    bearerAuth: []
            operationId: getAllUsers
            summary: Get All Users
            description: Retrieves all users.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                    description: Success
                '403':
                    description: The user does not have permission to create new users.
                '500':
                    description: >-
                        Either the username provided is already taken, or the server failed to save the new
                        user.
            security:
                -
                    bearerAuth: []
            operationId: createUser
            summary: Create a User
            description: Creates a new user.
    /api/users/online:
        get:
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOnlineUsersResponse'
                    description: Success
                '403':
                    description: An admin user is required to get users.
            security:
                -
                    bearerAuth: []
            operationId: getOnlineUsers
            summary: Get Online Users
            description: Retrieves all online users and open sessions.
    /api/users/{id}:
        get:
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserWithSession'
                    description: Success
                '403':
                    description: An admin user is required to get users.
                '404':
                    description: No user with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getUser
            summary: Get a User
            description: Retrieves a user by ID.
        delete:
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                    description: Success
                '404':
                    description: No user with the provided ID exists.
                '500':
                    description: The root user cannot be deleted and users cannot delete themselves.
            security:
                -
                    bearerAuth: []
            operationId: deleteUser
            summary: Delete a User
            description: Deletes a user by ID.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                    description: Success
                '403':
                    description: >-
                        An admin user is required to edit users and the root user is required to edit the root
                        user.
                '404':
                    description: No user with the provided ID exists.
                '500':
                    description: The provided username is already taken.
            security:
                -
                    bearerAuth: []
            operationId: updateUser
            summary: Update a User
            description: Updates a user's details.
    /api/users/{id}/listening-sessions:
        get:
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: itemsPerPage
                    schema:
                        type: integer
                    in: query
                -
                    name: page
                    schema:
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserListeningSessionsResponse'
                    description: Success
                '404':
                    description: No user with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getUserListeningSessions
            summary: Get a User's Listening Sessions
            description: Retrieves the listening sessions of a user.
    /api/users/{id}/listening-stats:
        get:
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserListeningStatsResponse'
                    description: Success
                '404':
                    description: No user with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: getUserListeningStats
            summary: Get a User's Listening Stats
            description: Retrieves a user's listening statistics.
    /api/users/{id}/purge-media-progress:
        post:
            tags:
                - Users
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserWithProgressDetails'
                    description: Success
                '403':
                    description: Only the root user can purge the root user's media progress.
                '404':
                    description: No user with the provided ID exists.
            security:
                -
                    bearerAuth: []
            operationId: purgeUserMediaProgress
            summary: Purge a User's Media Progress
            description: Removes the user's media progress for items that no longer exist.
    /api/collections:
        get:
            tags:
                - Collections
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllCollectionsResponse'
                    description: Success
            operationId: getAllCollections
            summary: Get All Collections
            description: Retrieves all collections.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCollectionRequest'
                required: true
            tags:
                - Collections
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with update permissions is required to create collections.
                '500':
                    description: libraryId and name are required parameters.
            operationId: createCollection
            summary: Create a Collection
            description: Creates a collection and returns it.
    /api/collections/{id}:
        get:
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: include
                    schema:
                        description: >-
                            A comma separated list of what to include with the library item. The only current
                            option is rssfeed.
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '404':
                    description: No collection with the specified ID exists.
            operationId: getCollection
            summary: Get a Collection
            description: Retrieves a collection.
        delete:
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
                '403':
                    description: A user with delete permissions is required to delete a collection.
                '404':
                    description: No collection with the specified ID exists.
            operationId: deleteCollection
            summary: Delete a Collection
            description: Deletes a collection from the database.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateCollectionRequest'
                required: true
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with update permissions is required to update collections.
                '404':
                    description: No collection with the specified ID exists.
            operationId: updateCollection
            summary: Update a Collection
            description: Updates a collection and returns it.
    /api/collections/{id}/book:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddBookToCollectionRequest'
                required: true
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with update permissions is required to update collections.
                '404':
                    description: No collection with the specified ID exists.
                '500':
                    description: >-
                        The provided library item ID could not be found, is in a different library, or is
                        already in the collection.
            operationId: addBookToCollection
            summary: Add a Book to a Collection
            description: Adds a book to a collection and returns the collection.
    /api/collections/{id}/book/{bookId}:
        delete:
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: bookId
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with delete permissions is required to remove a book from a collection.
                '404':
                    description: No collection with the specified ID exists.
            operationId: removeBookFromCollection
            summary: Remove a Book from a Collection
            description: Removes a book from a collection and returns the collection.
    /api/collections/{id}/batch/add:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchUpdateBooksRequest'
                required: true
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with update permissions is required to update collections.
                '404':
                    description: No collection with the specified ID exists.
                '500':
                    description: The provided books array must not be empty.
            operationId: batchAddBooksToCollection
            summary: Batch Add Books to a Collection
            description: Batch adds books to a collection and returns the collection.
    /api/collections/{id}/batch/remove:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchUpdateBooksRequest'
                required: true
            tags:
                - Collections
            parameters:
                -
                    name: id
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CollectionExpanded'
                    description: Success
                '403':
                    description: A user with update permissions is required to update collections.
                '404':
                    description: No collection with the specified ID exists.
                '500':
                    description: The provided books array must not be empty.
            operationId: batchRemoveBooksFromCollection
            summary: Batch Remove Books from a Collection
            description: Batch removes books from a collection and returns the collection.
    /api/playlists:
        get:
            tags:
                - Playlists
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAllPlaylistsResponse'
                    description: Success
            operationId: getAllUserPlaylists
            summary: Get All User Playlists
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePlaylistRequest'
                required: true
            tags:
                - Playlists
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '400':
                    description: The provided playlist data was invalid.
            operationId: createPlaylist
            summary: Create a Playlist
    /api/playlists/{id}:
        get:
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
            operationId: getPlaylist
            summary: Get a Playlist
        delete:
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
            operationId: deletePlaylist
            summary: Delete a Playlist
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePlaylistRequest'
                required: true
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
            operationId: updatePlaylist
            summary: Update a Playlist
    /api/playlists/{id}/item:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddPlaylistItemRequest'
                required: true
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '400':
                    description: >-
                        No library item with the provided ID exists, the library item is in a different
                        library from the playlist, the library item is already in the playlist, the library
                        item is not a podcast and an episodeId was provided, the library item is a podcast and
                        an episodeId was not provided, or no podcast episode with the provided ID exists in
                        the library item.
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
            operationId: addItemToPlaylist
            summary: Add an Item to a Playlist
    /api/playlists/{id}/item/{libraryItemId}:
        delete:
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: libraryItemId
                    description: The ID of the library item the playlist item to remove is for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: >-
                        No playlist with the provided ID exists, or the playlist does not contain the provided
                        item.
            operationId: removeItemFromPlaylist
            summary: Remove an Item From a Playlist
    /api/playlists/{id}/batch/add:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchAddItemsRequest'
                required: true
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '400':
                    description: One or more of the provided items does not have a libraryItemId.
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
                '500':
                    description: The provided items array was empty or did not exist.
            operationId: batchAddItemsToPlaylist
            summary: Batch Add Items to a Playlist
    /api/playlists/{id}/batch/remove:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchRemoveItemsRequest'
                required: true
            tags:
                - Playlists
            parameters:
                -
                    name: id
                    description: The ID of the playlist.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlaylistExpanded'
                    description: Success
                '400':
                    description: One or more of the provided items does not have a libraryItemId.
                '403':
                    description: The playlist does not belong to the authenticated user.
                '404':
                    description: No playlist with the provided ID exists.
                '500':
                    description: The provided items array was empty or did not exist.
            operationId: batchRemoveItemsFromPlaylist
            summary: Batch Remove Items From a Playlist
    /api/me:
        get:
            tags:
                - Me
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Success
            operationId: getYourUser
            summary: Get Your User
            description: Retrieves the authenticated user's details.
    /api/me/listening-sessions:
        get:
            tags:
                - Me
            parameters:
                -
                    name: itemsPerPage
                    description: The number of listening sessions to retrieve per page.
                    schema:
                        default: 10
                        type: integer
                    in: query
                -
                    name: page
                    description: The page (0-indexed) to retrieve.
                    schema:
                        default: 0
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetListeningSessionsResponse'
                    description: Success
            operationId: getYourListeningSessions
            summary: Get Your Listening Sessions
            description: Retrieves the listening sessions for the authenticated user.
    /api/me/listening-stats:
        get:
            tags:
                - Me
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetListeningStatsResponse'
                    description: Success
            operationId: getYourListeningStats
            summary: Get Your Listening Stats
            description: Retrieves listening statistics for the authenticated user.
    /api/me/progress/{id}/remove-from-continue-listening:
        get:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the media progress to remove.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Success
            operationId: removeItemFromContinueListening
            summary: Remove an Item From Continue Listening
            description: Removes a library item from the user's "Continue Listening" shelf.
    /api/me/progress/{id}:
        get:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to retrieve the media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MediaProgress'
                    description: Success
                '404':
                    description: No media progress was found that matches the given ID.
            operationId: getMediaProgress
            summary: Get a Media Progress
            description: Retrieves your media progress that is associated with the given library item ID.
        delete:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the media progress to remove.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
            operationId: removeMediaProgress
            summary: Remove a Media Progress
            description: Removes a media progress entry from the user's data.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMediaProgressRequest'
                required: true
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to create/update media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
                '404':
                    description: No library items or podcast episodes were found with the given ID.
            operationId: updateMediaProgress
            summary: Create/Update Media Progress
            description: Creates or updates media progress for a library item.
    /api/me/progress/{id}/{EpisodeID}:
        get:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to retrieve the media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: EpisodeID
                    description: The ID of the podcast episode to retrieve the media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MediaProgress'
                    description: Success
                '404':
                    description: No media progress was found that matches the given IDs.
            operationId: getMediaProgressForEpisode
            summary: Get a Media Progress for Episode
            description: Retrieves your media progress for the specified library item and podcast episode.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMediaProgressRequest'
                required: true
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to create/update media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: EpisodeID
                    description: The ID of the podcast episode to create/update media progress for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
                '404':
                    description: No library items or podcast episodes were found with the given IDs.
            operationId: updateMediaProgressForEpisode
            summary: Create/Update Media Progress for Episode
            description: Creates or updates media progress for a library item and podcast episode.
    /api/me/items-in-progress:
        get:
            tags:
                - Me
            parameters:
                -
                    name: limit
                    description: A limit for how many library items to return.
                    schema:
                        default: 25
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetItemsInProgressResponse'
                    description: Success
            operationId: getLibraryItemsInProgress
            summary: Get Library Items In Progress
            description: Retrieves library items that are in progress for the authenticated user.
    /api/me/progress/batch/update:
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BatchUpdateMediaProgressRequest'
                required: true
            tags:
                - Me
            responses:
                '200':
                    description: Success
                '400':
                    description: The provided array must have a non-zero length.
            operationId: batchUpdateMediaProgress
            summary: Batch Create/Update Media Progress
            description: Batch creates or updates media progress for the authenticated user.
    /api/me/item/{id}/bookmark:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBookmarkRequest'
                required: true
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to create a bookmark for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AudioBookmark'
                    description: Success
                '404':
                    description: No library item with the provided ID exists.
            operationId: createBookmark
            summary: Create a Bookmark
            description: Creates a bookmark for a library item.
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBookmarkRequest'
                required: true
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to update a bookmark for.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AudioBookmark'
                    description: Success
                '404':
                    description: No library item with the provided ID exists or no bookmark at the given time exists.
                '500':
                    description: Could not find the bookmark.
            operationId: updateBookmark
            summary: Update a Bookmark
            description: Updates a bookmark for a library item.
    /api/me/item/{id}/bookmark/{time}:
        delete:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the library item to remove a bookmark from.
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: time
                    description: The time (in seconds) of the bookmark to remove.
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: Success
                '404':
                    description: No library item with the provided ID exists or no bookmark at the given Time exists.
                '500':
                    description: The Time URL parameter must be a number.
            operationId: removeBookmark
            summary: Remove a Bookmark
            description: Removes a bookmark from a library item.
    /api/me/password:
        patch:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangePasswordRequest'
                required: true
            tags:
                - Me
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangePasswordResponse'
                    description: Success
                '500':
                    description: Guest users cannot change their password.
            operationId: changePassword
            summary: Change Your Password
            description: Changes the password for the authenticated user.
    /api/me/sync-local-progress:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SyncLocalProgressRequest'
                required: true
            tags:
                - Me
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SyncLocalProgressResponse'
                    description: Success
                '500':
                    description: The localMediaProgress parameter is required.
            operationId: syncLocalProgress
            summary: Sync Local Media Progress
            description: >-
                Syncs local media progress with the server. For any local media progress with a greater
                lastUpdate time than the lastUpdate time of the matching media progress on the server, the
                server's media progress is updated. If the server's lastUpdate time is greater, the local
                media progress will be returned with the updated information.
    /api/me/series/{id}/remove-from-continue-listening:
        get:
            tags:
                - Me
            parameters:
                -
                    name: id
                    description: The ID of the series to remove from continue listening.
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Success
                '404':
                    description: No series matching the provided ID was found.
            operationId: removeSeriesFromContinueListening
            summary: Remove a Series From Continue Listening
            description: Removes a series from your "Continue Series" shelf. Your user is returned.
components:
    schemas:
        Library:
            description: A library.
            type: object
            properties:
                id:
                    description: The ID of the library. (Read Only)
                    type: string
                    readOnly: true
                name:
                    description: The name of the library.
                    type: string
                folders:
                    description: The folders that the library is composed of on the server.
                    type: array
                    items:
                        $ref: '#/components/schemas/Folder'
                displayOrder:
                    description: Display position of the library in the list of libraries. Must be >= 1.
                    type: integer
                icon:
                    description: The selected icon for the library. See Library Icons for a list of possible icons.
                    type: string
                mediaType:
                    description: The type of media that the library contains. Will be book or podcast. (Read Only)
                    enum:
                        - book
                        - podcast
                    type: string
                    readOnly: true
                provider:
                    description: >-
                        Preferred metadata provider for the library. See Metadata Providers for a list of
                        possible providers.
                    type: string
                settings:
                    $ref: '#/components/schemas/LibrarySettings'
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library was created. (Read Only)
                    type: integer
                    readOnly: true
                lastUpdate:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library was last updated. (Read Only)
                    type: integer
                    readOnly: true
            example:
                id: lib_c1u6t4p45c35rf0nzd
                name: Main
                folders:
                    - ...
                displayOrder: 1
                icon: audiobookshelf
                mediaType: book
                provider: audible
                settings: {}
                createdAt: 1633522963509
                lastUpdate: 1646520916818
        LibrarySettings:
            description: Settings for a library.
            type: object
            properties:
                coverAspectRatio:
                    description: >-
                        Whether the library should use square book covers. Must be 0 (for false) or 1 (for
                        true).
                    type: integer
                disableWatcher:
                    description: Whether to disable the folder watcher for the library.
                    type: boolean
                skipMatchingMediaWithAsin:
                    description: Whether to skip matching books that already have an ASIN.
                    type: boolean
                skipMatchingMediaWithIsbn:
                    description: Whether to skip matching books that already have an ISBN.
                    type: boolean
                autoScanCronExpression:
                    nullable: true
                    description: >-
                        The cron expression for when to automatically scan the library folders. If null,
                        automatic scanning will be disabled.
                    type: string
            example:
                coverAspectRatio: 1
                disableWatcher: false
                skipMatchingMediaWithAsin: false
                skipMatchingMediaWithIsbn: false
        LibraryFilterData:
            description: Filter data for a library.
            type: object
            properties:
                authors:
                    description: The authors of books in the library.
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorMinified'
                genres:
                    description: The genres of books in the library.
                    type: array
                    items:
                        type: string
                tags:
                    description: The tags in the library.
                    type: array
                    items:
                        type: string
                series:
                    description: The series in the library. The series will only have their id and name.
                    type: array
                    items:
                        $ref: '#/components/schemas/Series'
                narrators:
                    description: The narrators of books in the library.
                    type: array
                    items:
                        type: string
                languages:
                    description: The languages of books in the library.
                    type: array
                    items:
                        type: string
            example:
                authors:
                    -
                        id: aut_z3leimgybl7uf3y4ab
                        name: Terry Goodkind
                genres:
                    - Fantasy
                tags: []
                series:
                    -
                        id: ser_cabkj4jeu8be3rap4g
                        name: Sword of Truth
                narrators:
                    - Sam Tsoutsouvas
                languages: []
        Folder:
            description: A folder in a library.
            type: object
            properties:
                id:
                    description: The ID of the folder. (Read Only)
                    type: string
                    readOnly: true
                fullPath:
                    description: The path on the server for the folder. (Read Only)
                    type: string
                    readOnly: true
                libraryId:
                    description: The ID of the library the folder belongs to. (Read Only)
                    type: string
                    readOnly: true
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the folder was added. (Read Only)
                    type: integer
                    readOnly: true
            example:
                id: fol_bev1zuxhb0j0s1wehr
                fullPath: /podcasts
                libraryId: lib_c1u6t4p45c35rf0nzd
                addedAt: 1650462940610
        LibraryItem:
            description: A library item.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                ino:
                    description: The inode of the library item.
                    type: string
                libraryId:
                    description: The ID of the library the item belongs to.
                    type: string
                folderId:
                    description: The ID of the folder the library item is in.
                    type: string
                path:
                    description: The path of the library item on the server.
                    type: string
                relPath:
                    description: The path, relative to the library folder, of the library item.
                    type: string
                isFile:
                    description: Whether the library item is a single file in the root of the library folder.
                    type: boolean
                mtimeMs:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library item was last modified on disk.
                    type: integer
                ctimeMs:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library item status was changed on disk.
                    type: integer
                birthtimeMs:
                    format: int64
                    description: >-
                        The time (in ms since POSIX epoch) when the library item was created on disk. Will be
                        0 if unknown.
                    type: integer
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library item was added to the library.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library item was last updated. (Read Only)
                    type: integer
                    readOnly: true
                lastScan:
                    nullable: true
                    format: int64
                    description: >-
                        The time (in ms since POSIX epoch) when the library item was last scanned. Will be
                        null if the server has not yet scanned the library item.
                    type: integer
                scanVersion:
                    nullable: true
                    description: The version of the scanner when last scanned. Will be null if it has not been scanned.
                    type: string
                isMissing:
                    description: Whether the library item was scanned and no longer exists.
                    type: boolean
                isInvalid:
                    description: Whether the library item was scanned and no longer has media files.
                    type: boolean
                mediaType:
                    description: What kind of media the library item contains. Will be book or podcast.
                    enum:
                        - book
                        - podcast
                    type: string
                media:
                    oneOf:
                        -
                            $ref: '#/components/schemas/Book'
                        -
                            $ref: '#/components/schemas/Podcast'
                    description: The media of the library item.
                libraryFiles:
                    description: The files of the library item.
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryFile'
            example:
                id: li_8gch9ve09orgn4fdz8
                ino: '649641337522215266'
                libraryId: lib_c1u6t4p45c35rf0nzd
                folderId: fol_bev1zuxhb0j0s1wehr
                path: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule
                relPath: Terry Goodkind/Sword of Truth/Wizards First Rule
                isFile: false
                mtimeMs: 1650621074299
                ctimeMs: 1650621074299
                birthtimeMs: 0
                addedAt: 1650621073750
                updatedAt: 1650621110769
                lastScan: 1651830827825
                scanVersion: 2.0.21
                isMissing: false
                isInvalid: false
                mediaType: book
                media: {}
                libraryFiles: []
        LibraryItemMinified:
            description: A minified form of a library item.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                ino:
                    description: The inode of the library item.
                    type: string
                libraryId:
                    description: The ID of the library.
                    type: string
                folderId:
                    description: The ID of the folder.
                    type: string
                path:
                    description: The path of the library item on the server.
                    type: string
                relPath:
                    description: The relative path of the library item.
                    type: string
                isFile:
                    description: Whether the library item is a single file.
                    type: boolean
                mtimeMs:
                    format: int64
                    description: Last modified time (ms since epoch).
                    type: integer
                ctimeMs:
                    format: int64
                    description: Change time (ms since epoch).
                    type: integer
                birthtimeMs:
                    format: int64
                    description: Creation time (ms since epoch). Will be 0 if unknown.
                    type: integer
                addedAt:
                    format: int64
                    description: Time the item was added to the library.
                    type: integer
                updatedAt:
                    format: int64
                    description: Time when item was last updated.
                    type: integer
                isMissing:
                    description: True if item no longer exists.
                    type: boolean
                isInvalid:
                    description: True if item no longer has media files.
                    type: boolean
                mediaType:
                    description: What kind of media the item contains (book or podcast).
                    type: string
                media:
                    oneOf:
                        -
                            $ref: '#/components/schemas/BookMinified'
                        -
                            $ref: '#/components/schemas/PodcastMinified'
                    description: Book Minified or Podcast Minified.
                numFiles:
                    description: The number of library files.
                    type: integer
                size:
                    description: Total size (in bytes) of the item.
                    type: integer
            example:
                id: li_8gch9ve09orgn4fdz8
                ino: '649641337522215266'
                libraryId: lib_c1u6t4p45c35rf0nzd
                folderId: fol_bev1zuxhb0j0s1wehr
                path: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule
                relPath: Terry Goodkind/Sword of Truth/Wizards First Rule
                isFile: false
                mtimeMs: 1650621074299
                ctimeMs: 1650621074299
                birthtimeMs: 0
                addedAt: 1650621073750
                updatedAt: 1650621110769
                isMissing: false
                isInvalid: false
                mediaType: book
                media: {}
                numFiles: 2
                size: 268990279
        LibraryItemInProgress:
            description: A library item including progress information.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                ino:
                    description: The inode of the library item.
                    type: string
                libraryId:
                    description: The ID of the library.
                    type: string
                folderId:
                    description: The ID of the folder.
                    type: string
                path:
                    description: The path of the library item on the server.
                    type: string
                relPath:
                    description: The relative path of the library item.
                    type: string
                isFile:
                    description: Whether the library item is a single file.
                    type: boolean
                mtimeMs:
                    format: int64
                    description: Last modified time (ms since epoch).
                    type: integer
                ctimeMs:
                    format: int64
                    description: Change time (ms since epoch).
                    type: integer
                birthtimeMs:
                    format: int64
                    description: Creation time (ms since epoch). Will be 0 if unknown.
                    type: integer
                addedAt:
                    format: int64
                    description: Time the item was added to the library.
                    type: integer
                updatedAt:
                    format: int64
                    description: Time when item was last updated.
                    type: integer
                isMissing:
                    description: True if item no longer exists.
                    type: boolean
                isInvalid:
                    description: True if item no longer has media files.
                    type: boolean
                mediaType:
                    description: What kind of media the item contains (book or podcast).
                    type: string
                media:
                    oneOf:
                        -
                            $ref: '#/components/schemas/BookMinified'
                        -
                            $ref: '#/components/schemas/PodcastMinified'
                    description: Book Minified or Podcast Minified.
                numFiles:
                    description: The number of library files.
                    type: integer
                size:
                    description: Total size (in bytes) of the item.
                    type: integer
                progressLastUpdate:
                    format: int64
                    description: >-
                        The time (in ms since POSIX epoch) when the corresponding media progress was last
                        updated.
                    type: integer
                recentEpisode:
                    nullable: true
                    $ref: '#/components/schemas/PodcastEpisode'
                    description: >-
                        If the library item is for a podcast, the media progress's corresponding podcast
                        episode. Will not exist for book library items.
            example:
                id: li_8gch9ve09orgn4fdz8
                ino: '649641337522215266'
                libraryId: lib_c1u6t4p45c35rf0nzd
                folderId: fol_bev1zuxhb0j0s1wehr
                path: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule
                relPath: Terry Goodkind/Sword of Truth/Wizards First Rule
                isFile: false
                mtimeMs: 1650621074299
                ctimeMs: 1650621074299
                birthtimeMs: 0
                addedAt: 1650621073750
                updatedAt: 1650621110769
                isMissing: false
                isInvalid: false
                mediaType: book
                media: {}
                numFiles: 2
                size: 268990279
        LibraryItemExpanded:
            description: An expanded form of a library item.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                ino:
                    description: The inode.
                    type: string
                libraryId:
                    description: Library ID.
                    type: string
                folderId:
                    description: Folder ID.
                    type: string
                path:
                    description: Absolute path.
                    type: string
                relPath:
                    description: Relative path.
                    type: string
                isFile:
                    description: Is a single file?
                    type: boolean
                mtimeMs:
                    format: int64
                    description: Last modified time.
                    type: integer
                ctimeMs:
                    format: int64
                    description: Change time.
                    type: integer
                birthtimeMs:
                    format: int64
                    description: Birth time.
                    type: integer
                addedAt:
                    format: int64
                    description: Time added.
                    type: integer
                updatedAt:
                    format: int64
                    description: Time updated.
                    type: integer
                lastScan:
                    nullable: true
                    format: int64
                    description: Last scan time.
                    type: integer
                scanVersion:
                    nullable: true
                    description: Scanner version.
                    type: string
                isMissing:
                    description: Is missing?
                    type: boolean
                isInvalid:
                    description: Is invalid?
                    type: boolean
                mediaType:
                    description: Media type (book or podcast).
                    type: string
                media:
                    oneOf:
                        -
                            $ref: '#/components/schemas/BookExpanded'
                        -
                            $ref: '#/components/schemas/PodcastExpanded'
                    description: Book Expanded or Podcast Expanded.
                libraryFiles:
                    description: The item's files.
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryFile'
                size:
                    description: Total size in bytes.
                    type: integer
            example:
                id: li_8gch9ve09orgn4fdz8
                ino: '649641337522215266'
                libraryId: lib_c1u6t4p45c35rf0nzd
                folderId: fol_bev1zuxhb0j0s1wehr
                path: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule
                relPath: Terry Goodkind/Sword of Truth/Wizards First Rule
                isFile: false
                mtimeMs: 1650621074299
                ctimeMs: 1650621074299
                birthtimeMs: 0
                addedAt: 1650621073750
                updatedAt: 1650621110769
                lastScan: 1651830827825
                scanVersion: 2.0.21
                isMissing: false
                isInvalid: false
                mediaType: book
                media: {}
                libraryFiles: []
                size: 268990279
        Book:
            description: A book object.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item that contains the book.
                    type: string
                metadata:
                    $ref: '#/components/schemas/BookMetadata'
                    description: The book's metadata.
                coverPath:
                    nullable: true
                    description: The absolute path on the server of the cover file. Will be null if there is no cover.
                    type: string
                tags:
                    description: The book's tags.
                    type: array
                    items:
                        type: string
                audioFiles:
                    description: The book's audio files.
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioFile'
                chapters:
                    description: The book's chapters.
                    type: array
                    items:
                        $ref: '#/components/schemas/BookChapter'
                ebookFile:
                    nullable: true
                    $ref: '#/components/schemas/EBookFile'
                    description: The book's ebook file. Will be null if this is an audiobook.
            example:
                libraryItemId: li_8gch9ve09orgn4fdz8
                metadata: {}
                coverPath: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/cover.jpg
                tags:
                    - Favorite
                audioFiles:
                    - ...
                chapters:
                    - ...
        BookMinified:
            description: A minified version of Book.
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/BookMetadataMinified'
                    description: Minified book metadata.
                coverPath:
                    nullable: true
                    description: Cover path.
                    type: string
                tags:
                    description: Tags.
                    type: array
                    items:
                        type: string
                numTracks:
                    description: The number of tracks.
                    type: integer
                numAudioFiles:
                    description: Number of audio files.
                    type: integer
                numChapters:
                    description: Number of chapters.
                    type: integer
                duration:
                    description: Total length in seconds.
                    type: number
                size:
                    description: Total size in bytes.
                    type: integer
                ebookFormat:
                    nullable: true
                    description: Ebook format or null if audiobook.
                    type: string
            example:
                metadata: {}
                coverPath: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/cover.jpg
                tags:
                    - Favorite
                numTracks: 1
                numAudioFiles: 1
                numChapters: 1
                duration: 33854.905
                size: 268824228
        BookExpanded:
            description: An expanded version of Book.
            type: object
            properties:
                libraryItemId:
                    description: ID of the library item.
                    type: string
                metadata:
                    $ref: '#/components/schemas/BookMetadataExpanded'
                    description: Expanded book metadata.
                coverPath:
                    nullable: true
                    description: Cover path.
                    type: string
                tags:
                    description: Tags.
                    type: array
                    items:
                        type: string
                audioFiles:
                    description: Audio files.
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioFile'
                chapters:
                    description: Chapters.
                    type: array
                    items:
                        $ref: '#/components/schemas/BookChapter'
                duration:
                    description: Total length in seconds.
                    type: number
                size:
                    description: Total size in bytes.
                    type: integer
                tracks:
                    description: Audio tracks.
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioTrack'
                ebookFile:
                    nullable: true
                    $ref: '#/components/schemas/EBookFile'
                    description: Ebook file or null.
            example:
                libraryItemId: li_8gch9ve09orgn4fdz8
                metadata: {}
                coverPath: /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/cover.jpg
                tags:
                    - Favorite
                audioFiles:
                    - ...
                chapters:
                    - ...
                duration: 33854.905
                size: 268824228
                tracks:
                    - ...
        BookMetadata:
            description: Book Metadata Object.
            type: object
            properties:
                title:
                    nullable: true
                    description: The title of the book. Will be null if unknown.
                    type: string
                subtitle:
                    nullable: true
                    description: The subtitle of the book. Will be null if there is no subtitle.
                    type: string
                authors:
                    description: The authors of the book.
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorMinified'
                narrators:
                    description: The narrators of the audiobook.
                    type: array
                    items:
                        type: string
                series:
                    description: The series the book belongs to.
                    type: array
                    items:
                        $ref: '#/components/schemas/SeriesSequence'
                genres:
                    description: The genres of the book.
                    type: array
                    items:
                        type: string
                publishedYear:
                    nullable: true
                    description: The year the book was published. Will be null if unknown.
                    type: string
                publishedDate:
                    nullable: true
                    description: The date the book was published. Will be null if unknown.
                    type: string
                publisher:
                    nullable: true
                    description: The publisher of the book. Will be null if unknown.
                    type: string
                description:
                    nullable: true
                    description: A description for the book. Will be null if empty.
                    type: string
                isbn:
                    nullable: true
                    description: The ISBN of the book. Will be null if unknown.
                    type: string
                asin:
                    nullable: true
                    description: The ASIN of the book. Will be null if unknown.
                    type: string
                language:
                    nullable: true
                    description: The language of the book. Will be null if unknown.
                    type: string
                explicit:
                    description: Whether the book has been marked as explicit.
                    type: boolean
            example:
                title: Wizards First Rule
                authors: []
                narrators:
                    - Sam Tsoutsouvas
                series: []
                genres:
                    - Fantasy
                publishedYear: '2008'
                publisher: Brilliance Audio
                description: The masterpiece that started Terry Goodkind's...
                asin: B002V0QK4C
                explicit: false
        BookMetadataMinified:
            description: Minified Book Metadata.
            type: object
            properties:
                title:
                    nullable: true
                    description: The title of the book. Will be null if unknown.
                    type: string
                titleIgnorePrefix:
                    description: The title of the book with any prefix moved to the end.
                    type: string
                subtitle:
                    nullable: true
                    description: The subtitle of the book.
                    type: string
                authorName:
                    nullable: true
                    description: The name of the book's author(s).
                    type: string
                authorNameLF:
                    nullable: true
                    description: The name of the book's author(s) with last names first.
                    type: string
                narratorName:
                    nullable: true
                    description: The name of the audiobook's narrator(s).
                    type: string
                seriesName:
                    nullable: true
                    description: The name of the book's series.
                    type: string
                genres:
                    description: The genres of the book.
                    type: array
                    items:
                        type: string
                publishedYear:
                    nullable: true
                    description: The year published.
                    type: string
                publishedDate:
                    nullable: true
                    description: The date published.
                    type: string
                publisher:
                    nullable: true
                    description: The publisher.
                    type: string
                description:
                    nullable: true
                    description: A description for the book.
                    type: string
                isbn:
                    nullable: true
                    description: The ISBN.
                    type: string
                asin:
                    nullable: true
                    description: The ASIN.
                    type: string
                language:
                    nullable: true
                    description: The language.
                    type: string
                explicit:
                    description: Whether the book is explicit.
                    type: boolean
            example:
                title: Wizards First Rule
                titleIgnorePrefix: Wizards First Rule
                authorName: Terry Goodkind
                authorNameLF: Goodkind, Terry
                narratorName: Sam Tsoutsouvas
                seriesName: Sword of Truth
                genres:
                    - Fantasy
                publishedYear: '2008'
                publisher: Brilliance Audio
                description: The masterpiece that started Terry Goodkind's...
                asin: B002V0QK4C
                explicit: false
        BookMetadataExpanded:
            description: Expanded Book Metadata.
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/BookMetadata'
            properties:
                titleIgnorePrefix:
                    description: The title of the book with any prefix moved to the end.
                    type: string
                authorName:
                    nullable: true
                    description: The name of the book's author(s).
                    type: string
                authorNameLF:
                    nullable: true
                    description: The author's name with last names first.
                    type: string
                narratorName:
                    nullable: true
                    description: The narrator's name.
                    type: string
                seriesName:
                    nullable: true
                    description: The series name.
                    type: string
            example:
                title: Wizards First Rule
                titleIgnorePrefix: Wizards First Rule
                authors: []
                narrators:
                    - Sam Tsoutsouvas
                series: []
                genres:
                    - Fantasy
                publishedYear: '2008'
                publisher: Brilliance Audio
                description: The masterpiece that started Terry Goodkind's...
                asin: B002V0QK4C
                explicit: false
                authorName: Terry Goodkind
                authorNameLF: Goodkind, Terry
                narratorName: Sam Tsoutsouvas
                seriesName: Sword of Truth
        BookChapter:
            description: A chapter of a book.
            type: object
            properties:
                id:
                    description: The ID of the book chapter.
                    type: integer
                start:
                    description: When in the book (in seconds) the chapter starts.
                    type: number
                end:
                    description: When in the book (in seconds) the chapter ends.
                    type: number
                title:
                    description: The title of the chapter.
                    type: string
            example:
                id: 0
                start: 0
                end: 6004.6675
                title: Terry Goodkind - SOT Bk01 - Wizards First Rule 01
        Podcast:
            description: A podcast object.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item that contains the podcast.
                    type: string
                metadata:
                    $ref: '#/components/schemas/PodcastMetadata'
                    description: The metadata for the podcast.
                coverPath:
                    nullable: true
                    description: The absolute path on the server of the cover file.
                    type: string
                tags:
                    description: The podcast's tags.
                    type: array
                    items:
                        type: string
                episodes:
                    description: The downloaded episodes of the podcast.
                    type: array
                    items:
                        $ref: '#/components/schemas/PodcastEpisode'
                autoDownloadEpisodes:
                    description: >-
                        Whether the server will automatically download podcast episodes according to the
                        schedule.
                    type: boolean
                autoDownloadSchedule:
                    nullable: true
                    description: >-
                        The cron expression for when to automatically download podcast episodes. If
                        autoDownloadEpisodes is false, may not exist.
                    type: string
                lastEpisodeCheck:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the podcast was checked for new episodes.
                    type: integer
                maxEpisodesToKeep:
                    description: The maximum number of podcast episodes to keep. If 0, all episodes will be kept.
                    type: integer
                maxNewEpisodesToDownload:
                    description: >-
                        The maximum number of podcast episodes to download when automatically downloading new
                        episodes. If 0, all episodes will be downloaded.
                    type: integer
            example:
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                metadata: {}
                coverPath: /podcasts/Welcome to Night Vale/cover.jpg
                tags:
                    - Favorite
                episodes:
                    - ...
                autoDownloadEpisodes: true
                autoDownloadSchedule: 0 0 * * 1
                lastEpisodeCheck: 1667326662087
                maxEpisodesToKeep: 0
                maxNewEpisodesToDownload: 3
        PodcastMinified:
            description: Minified Podcast.
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/PodcastMetadataMinified'
                    description: Minified podcast metadata.
                coverPath:
                    nullable: true
                    description: Cover path.
                    type: string
                tags:
                    description: Tags.
                    type: array
                    items:
                        type: string
                numEpisodes:
                    description: Number of downloaded episodes.
                    type: integer
                autoDownloadEpisodes:
                    description: Auto download episodes?
                    type: boolean
                autoDownloadSchedule:
                    nullable: true
                    description: Cron for auto download.
                    type: string
                lastEpisodeCheck:
                    format: int64
                    description: Last episode check time.
                    type: integer
                maxEpisodesToKeep:
                    description: Max episodes to keep.
                    type: integer
                maxNewEpisodesToDownload:
                    description: Max new episodes to download.
                    type: integer
                size:
                    description: Total size in bytes.
                    type: integer
            example:
                metadata: {}
                coverPath: /podcasts/Welcome to Night Vale/cover.jpg
                tags:
                    - Favorite
                numEpisodes: 1
                autoDownloadEpisodes: true
                autoDownloadSchedule: 0 0 * * 1
                lastEpisodeCheck: 1667326662087
                maxEpisodesToKeep: 0
                maxNewEpisodesToDownload: 3
                size: 23706728
        PodcastExpanded:
            description: Expanded Podcast.
            type: object
            properties:
                libraryItemId:
                    description: ID of library item.
                    type: string
                metadata:
                    $ref: '#/components/schemas/PodcastMetadataExpanded'
                coverPath:
                    nullable: true
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                episodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/PodcastEpisodeExpanded'
                autoDownloadEpisodes:
                    type: boolean
                autoDownloadSchedule:
                    nullable: true
                    type: string
                lastEpisodeCheck:
                    format: int64
                    type: integer
                maxEpisodesToKeep:
                    type: integer
                maxNewEpisodesToDownload:
                    type: integer
                size:
                    type: integer
            example:
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                metadata: {}
                coverPath: /podcasts/Welcome to Night Vale/cover.jpg
                tags:
                    - Favorite
                episodes:
                    - ...
                autoDownloadEpisodes: true
                autoDownloadSchedule: 0 0 * * 1
                lastEpisodeCheck: 1667326662087
                maxEpisodesToKeep: 0
                maxNewEpisodesToDownload: 3
                size: 23706728
        PodcastMetadata:
            description: Podcast Metadata Object.
            type: object
            properties:
                title:
                    nullable: true
                    description: The title of the podcast. Will be null if unknown.
                    type: string
                author:
                    nullable: true
                    description: The author of the podcast. Will be null if unknown.
                    type: string
                description:
                    nullable: true
                    description: The description for the podcast. Will be null if unknown.
                    type: string
                releaseDate:
                    nullable: true
                    description: The release date of the podcast. Will be null if unknown.
                    type: string
                genres:
                    description: The podcast's genres.
                    type: array
                    items:
                        type: string
                feedUrl:
                    nullable: true
                    description: A URL of an RSS feed for the podcast. Will be null if unknown.
                    type: string
                imageUrl:
                    nullable: true
                    description: A URL of a cover image for the podcast. Will be null if unknown.
                    type: string
                itunesPageUrl:
                    nullable: true
                    description: A URL of an iTunes page for the podcast. Will be null if unknown.
                    type: string
                itunesId:
                    nullable: true
                    description: The iTunes ID for the podcast. Will be null if unknown.
                    type: integer
                itunesArtistId:
                    nullable: true
                    description: The iTunes Artist ID for the author of the podcast. Will be null if unknown.
                    type: integer
                explicit:
                    description: Whether the podcast has been marked as explicit.
                    type: boolean
                language:
                    nullable: true
                    description: The language of the podcast. Will be null if unknown.
                    type: string
                type:
                    nullable: true
                    description: The type of the podcast.
                    type: string
            example:
                title: Welcome to Night Vale
                author: Night Vale Presents
                description: |4-

                          Twice-monthly community updates...
                releaseDate: '2022-10-20T19:00:00Z'
                genres:
                    - Science Fiction
                    - Podcasts
                    - Fiction
                feedUrl: http://feeds.nightvalepresents.com/welcometonightvalepodcast
                imageUrl: https://is4-ssl.mzstatic.com/image/thumb/Podcasts125/v4/...
                itunesPageUrl: https://podcasts.apple.com/us/podcast/welcome-to-night-vale/id536258179?uo=4
                itunesId: 536258179
                itunesArtistId: 718704794
                explicit: false
                type: episodic
        PodcastMetadataMinified:
            description: Minified Podcast Metadata.
            type: object
            properties:
                title:
                    nullable: true
                    description: Title of podcast. Will be null if unknown.
                    type: string
                titleIgnorePrefix:
                    description: The title of the podcast with any prefix moved to the end.
                    type: string
                author:
                    nullable: true
                    description: The author of the podcast.
                    type: string
                description:
                    nullable: true
                    description: The description for the podcast.
                    type: string
                releaseDate:
                    nullable: true
                    description: The release date of the podcast.
                    type: string
                genres:
                    description: Podcast genres.
                    type: array
                    items:
                        type: string
                feedUrl:
                    nullable: true
                    description: Feed URL.
                    type: string
                imageUrl:
                    nullable: true
                    description: Image URL.
                    type: string
                itunesPageUrl:
                    nullable: true
                    description: iTunes page URL.
                    type: string
                itunesId:
                    nullable: true
                    description: iTunes ID.
                    type: integer
                itunesArtistId:
                    nullable: true
                    description: iTunes artist ID.
                    type: integer
                explicit:
                    description: Whether the podcast is explicit.
                    type: boolean
                language:
                    nullable: true
                    description: The language of the podcast.
                    type: string
                type:
                    nullable: true
                    description: The type of the podcast.
                    type: string
            example:
                title: Welcome to Night Vale
                titleIgnorePrefix: Welcome to Night Vale
                author: Night Vale Presents
                description: |4-

                          Twice-monthly community updates...
                releaseDate: '2022-10-20T19:00:00Z'
                genres:
                    - Science Fiction
                    - Podcasts
                    - Fiction
                feedUrl: http://feeds.nightvalepresents.com/welcometonightvalepodcast
                imageUrl: https://is4-ssl.mzstatic.com/image/thumb/Podcasts125/...
                itunesPageUrl: https://podcasts.apple.com/us/podcast/welcome-to-night-vale/id536258179?uo=4
                itunesId: 536258179
                itunesArtistId: 718704794
                explicit: false
                type: episodic
        PodcastMetadataExpanded:
            description: Expanded Podcast Metadata.
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/PodcastMetadata'
            properties:
                titleIgnorePrefix:
                    description: Title with prefix moved.
                    type: string
            example:
                title: Welcome to Night Vale
                titleIgnorePrefix: Welcome to Night Vale
                author: Night Vale Presents
                description: |4-

                          Twice-monthly community updates...
                releaseDate: '2022-10-20T19:00:00Z'
                genres:
                    - Science Fiction
                    - Podcasts
                    - Fiction
                feedUrl: http://feeds.nightvalepresents.com/welcometonightvalepodcast
                imageUrl: https://is4-ssl.mzstatic.com/image/thumb/Podcasts125/...
                itunesPageUrl: https://podcasts.apple.com/us/podcast/welcome-to-night-vale/id536258179?uo=4
                itunesId: 536258179
                itunesArtistId: 718704794
                explicit: false
                type: episodic
        PodcastEpisode:
            description: A downloaded podcast episode.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item that contains the podcast.
                    type: string
                id:
                    description: The ID of the podcast episode.
                    type: string
                index:
                    description: The index of the podcast episode.
                    type: integer
                season:
                    description: The season of the podcast episode.
                    type: string
                episode:
                    description: The episode of the season of the podcast, if known.
                    type: string
                episodeType:
                    description: The type of episode that the podcast episode is.
                    type: string
                title:
                    description: The title of the podcast episode.
                    type: string
                subtitle:
                    description: The subtitle of the podcast episode.
                    type: string
                description:
                    description: A HTML encoded description of the podcast episode.
                    type: string
                enclosure:
                    $ref: '#/components/schemas/PodcastEpisodeEnclosure'
                    description: Information about the podcast episode from when it was downloaded.
                pubDate:
                    description: When the podcast episode was published.
                    type: string
                audioFile:
                    $ref: '#/components/schemas/AudioFile'
                    description: The audio file for the podcast episode.
                publishedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the podcast episode was published.
                    type: integer
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the podcast episode was added to the library.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the podcast episode was last updated.
                    type: integer
            example:
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                id: ep_lh6ko39pumnrma3dhv
                index: 1
                season: ''
                episode: ''
                episodeType: full
                title: 1 - Pilot
                subtitle: Pilot Episode...
                description: <p>Pilot Episode. A new dog park opens in Night Vale...</p>
                enclosure: {}
                pubDate: Fri, 15 Jun 2012 12:00:00 -0000
                audioFile: {}
                publishedAt: 1339761600000
                addedAt: 1667326679503
                updatedAt: 1667326679503
        PodcastEpisodeExpanded:
            description: An expanded podcast episode.
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/PodcastEpisode'
            properties:
                audioTrack:
                    $ref: '#/components/schemas/AudioTrack'
                    description: The podcast episode's audio track from the audio file.
                duration:
                    description: The total length (in seconds) of the podcast episode.
                    type: number
                size:
                    description: The total size (in bytes) of the podcast episode.
                    type: integer
            example:
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                id: ep_lh6ko39pumnrma3dhv
                index: 1
                season: ''
                episode: ''
                episodeType: full
                title: 1 - Pilot
                subtitle: Pilot Episode...
                description: <p>Pilot Episode...</p>
                enclosure: {}
                pubDate: Fri, 15 Jun 2012 12:00:00 -0000
                audioFile: {}
                audioTrack: {}
                publishedAt: 1339761600000
                addedAt: 1667326679503
                updatedAt: 1667326679503
                duration: 1454.18449
                size: 23653735
        PodcastEpisodeEnclosure:
            description: Podcast episode enclosure info.
            type: object
            properties:
                url:
                    description: The URL where the podcast episode's audio file was downloaded from.
                    type: string
                type:
                    description: The MIME type of the podcast episode's audio file.
                    type: string
                length:
                    description: >-
                        The size (in bytes) that was reported when downloading the podcast episode's audio
                        file.
                    type: string
            example:
                url: https://www.podtrac.com/pts/redirect.mp3/dovetail...
                type: audio/mpeg
                length: '20588611'
        PodcastEpisodeDownload:
            description: Information about a podcast episode download.
            type: object
            properties:
                id:
                    description: The ID of the podcast episode download.
                    type: string
                episodeDisplayTitle:
                    description: The display title of the episode to be downloaded.
                    type: string
                url:
                    description: The URL from which to download the episode.
                    type: string
                libraryItemId:
                    description: The ID of the library item the episode belongs to.
                    type: string
                libraryId:
                    description: The ID of the library the episode's podcast belongs to.
                    type: string
                isFinished:
                    description: Whether the episode has finished downloading.
                    type: boolean
                failed:
                    description: Whether the episode failed to download.
                    type: boolean
                startedAt:
                    nullable: true
                    format: int64
                    description: The time (in ms since POSIX epoch) when the episode started downloading.
                    type: integer
                createdAt:
                    format: int64
                    description: >-
                        The time (in ms since POSIX epoch) when the podcast episode download request was
                        created.
                    type: integer
                finishedAt:
                    nullable: true
                    format: int64
                    description: The time (in ms since POSIX epoch) when the episode finished downloading.
                    type: integer
                podcastTitle:
                    nullable: true
                    description: The title of the episode's podcast.
                    type: string
                podcastExplicit:
                    description: Whether the episode's podcast is explicit.
                    type: boolean
                season:
                    nullable: true
                    description: The season of the podcast episode.
                    type: string
                episode:
                    nullable: true
                    description: The episode number of the podcast episode.
                    type: string
                episodeType:
                    description: The type of the podcast episode.
                    type: string
                publishedAt:
                    nullable: true
                    format: int64
                    description: The time (in ms since POSIX epoch) when the episode was published.
                    type: integer
            example:
                id: epdl_pgv4d47j6dtqpk4r0v
                episodeDisplayTitle: 2 - Glow Cloud
                url: >-
                    https://www.podtrac.com/pts/redirect.mp3/dovetail.prxu.org/_/126/cb1dd91f-5d8d-42e9-ba22-14ff335d2cbb/2_Glow_Cloud.mp3
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                libraryId: lib_p9wkw2i85qy9oltijt
                isFinished: false
                failed: false
                createdAt: 1668122813409
                podcastTitle: Welcome to Night Vale
                podcastExplicit: false
                season: ''
                episode: ''
                episodeType: full
                publishedAt: 1341144000000
        PodcastFeed:
            description: Podcast Feed
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/PodcastFeedMetadata'
                    description: The podcast's metadata from the feed.
                episodes:
                    description: The podcast's episodes from the feed.
                    type: array
                    items:
                        $ref: '#/components/schemas/PodcastFeedEpisode'
            example:
                metadata: {}
                episodes:
                    - ...
        PodcastFeedMinified:
            description: Minified Podcast Feed
            type: object
            properties:
                metadata:
                    $ref: '#/components/schemas/PodcastFeedMetadataMinified'
                    description: The podcast's metadata from the feed.
                numEpisodes:
                    description: The number of episodes the podcast has.
                    type: integer
            example:
                metadata: {}
                numEpisodes: 280
        PodcastFeedMetadata:
            description: Podcast Feed Metadata
            type: object
            properties:
                image:
                    description: A URL for the podcast's cover image.
                    type: string
                categories:
                    description: The podcast's categories.
                    type: array
                    items:
                        type: string
                feedUrl:
                    description: A URL of an RSS feed for the podcast.
                    type: string
                description:
                    description: A HTML encoded description of the podcast.
                    type: string
                descriptionPlain:
                    description: A plain text description of the podcast.
                    type: string
                title:
                    description: The podcast's title.
                    type: string
                language:
                    description: The podcast's language.
                    type: string
                explicit:
                    description: Whether the podcast is explicit. Probably 'true' or 'false'.
                    type: string
                author:
                    description: The podcast's author.
                    type: string
                pubDate:
                    description: The podcast's publication date.
                    type: string
                link:
                    description: A URL the RSS feed provided for display to the user.
                    type: string
            example:
                image: https://f.prxu.org/126/images/1f749c5d-c83a-4db9-8112-a3245da49c54/nightvalelogo-web4.jpg
                categories:
                    - Fiction:Science Fiction
                feedUrl: http://feeds.nightvalepresents.com/welcometonightvalepodcast
                description: <p>Twice-monthly community updates...</p>
                descriptionPlain: Twice-monthly community updates...
                title: Welcome to Night Vale
                language: en
                explicit: 'false'
                author: Night Vale Presents
                pubDate: Thu, 17 Nov 2022 16:04:42 -0000
                link: http://welcometonightvale.com
        PodcastFeedMetadataMinified:
            description: Minified Podcast Feed Metadata
            type: object
            properties:
                title:
                    description: The podcast's title.
                    type: string
                description:
                    nullable: true
                    description: The description of the podcast.
                    type: string
                preventIndexing:
                    description: Whether indexing of the feed is prevented.
                    type: boolean
                ownerName:
                    nullable: true
                    description: The owner name of the RSS feed.
                    type: string
                ownerEmail:
                    nullable: true
                    description: The owner email of the RSS feed.
                    type: string
            example:
                title: Welcome to Night Vale
                description: |4-

                          Twice-monthly community updates...
                preventIndexing: true
        PodcastFeedEpisode:
            description: A podcast feed episode from the RSS feed.
            type: object
            properties:
                title:
                    description: The podcast episode's title.
                    type: string
                subtitle:
                    description: The podcast episode's subtitle.
                    type: string
                description:
                    description: A HTML encoded description of the podcast episode.
                    type: string
                descriptionPlain:
                    description: A plain text description of the podcast episode.
                    type: string
                pubDate:
                    description: The podcast episode's publication date.
                    type: string
                episodeType:
                    description: The type of episode.
                    type: string
                season:
                    description: The season of the podcast episode.
                    type: string
                episode:
                    description: The episode of the season of the podcast.
                    type: string
                author:
                    description: The author of the podcast episode.
                    type: string
                duration:
                    description: The duration of the podcast episode as reported by the RSS feed.
                    type: string
                explicit:
                    description: Whether the podcast episode is explicit.
                    type: string
                publishedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the podcast episode was published.
                    type: integer
                enclosure:
                    $ref: '#/components/schemas/PodcastEpisodeEnclosure'
                    description: Download information for the podcast episode.
            example:
                title: 1 - Pilot
                subtitle: Pilot Episode...
                description: <p>Pilot Episode...</p>
                descriptionPlain: Pilot Episode...
                pubDate: Fri, 15 Jun 2012 12:00:00 -0000
                episodeType: full
                season: ''
                episode: ''
                author: ''
                duration: '21:02'
                explicit: ''
                publishedAt: 1339761600000
                enclosure: {}
        AudioFile:
            description: An audio file.
            type: object
            properties:
                index:
                    description: The index of the audio file.
                    type: integer
                ino:
                    description: The inode of the audio file.
                    type: string
                metadata:
                    $ref: '#/components/schemas/FileMetadata'
                    description: The audio file's metadata.
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the audio file was added to the library.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the audio file last updated. (Read Only)
                    type: integer
                trackNumFromMeta:
                    nullable: true
                    description: The track number from file metadata.
                    type: integer
                discNumFromMeta:
                    nullable: true
                    description: The disc number from file metadata.
                    type: integer
                trackNumFromFilename:
                    nullable: true
                    description: The track number from filename.
                    type: integer
                discNumFromFilename:
                    nullable: true
                    description: The disc number from filename.
                    type: integer
                manuallyVerified:
                    description: Whether the audio file has been manually verified.
                    type: boolean
                exclude:
                    description: Whether the audio file has been marked for exclusion.
                    type: boolean
                error:
                    nullable: true
                    description: Any error with the audio file. Null if none.
                    type: string
                format:
                    description: The format of the audio file.
                    type: string
                duration:
                    description: The total length (in seconds) of the audio file.
                    type: number
                bitRate:
                    description: The bit rate (in bit/s) of the audio file.
                    type: integer
                language:
                    nullable: true
                    description: The language of the audio file.
                    type: string
                codec:
                    description: The codec of the audio file.
                    type: string
                timeBase:
                    description: The time base of the audio file.
                    type: string
                channels:
                    description: The number of channels the audio file has.
                    type: integer
                channelLayout:
                    description: The layout of the audio file's channels.
                    type: string
                chapters:
                    description: If audiobook, the chapters the file contains.
                    type: array
                    items:
                        $ref: '#/components/schemas/BookChapter'
                embeddedCoverArt:
                    nullable: true
                    description: The type of embedded cover art. Null if none.
                    type: string
                metaTags:
                    $ref: '#/components/schemas/AudioMetaTags'
                    description: The audio metadata tags.
                mimeType:
                    description: The MIME type of the audio file.
                    type: string
            example:
                index: 1
                ino: '649644248522215260'
                metadata: {}
                addedAt: 1650621074131
                updatedAt: 1651830828023
                trackNumFromMeta: 1
                trackNumFromFilename: 1
                manuallyVerified: false
                exclude: false
                format: MP2/3 (MPEG audio layer 2/3)
                duration: 6004.6675
                bitRate: 64000
                codec: mp3
                timeBase: 1/14112000
                channels: 2
                channelLayout: stereo
                chapters: []
                metaTags: {}
                mimeType: audio/mpeg
        AudioMetaTags:
            description: >-
                ID3 metadata tags pulled from the audio file on import. Only non-null tags will be returned in
                requests.
            type: object
            properties:
                tagAlbum:
                    nullable: true
                    type: string
                tagArtist:
                    nullable: true
                    type: string
                tagGenre:
                    nullable: true
                    type: string
                tagTitle:
                    nullable: true
                    type: string
                tagSeries:
                    nullable: true
                    type: string
                tagSeriesPart:
                    nullable: true
                    type: string
                tagTrack:
                    nullable: true
                    type: string
                tagDisc:
                    nullable: true
                    type: string
                tagSubtitle:
                    nullable: true
                    type: string
                tagAlbumArtist:
                    nullable: true
                    type: string
                tagDate:
                    nullable: true
                    type: string
                tagComposer:
                    nullable: true
                    type: string
                tagPublisher:
                    nullable: true
                    type: string
                tagComment:
                    nullable: true
                    type: string
                tagDescription:
                    nullable: true
                    type: string
                tagEncoder:
                    nullable: true
                    type: string
                tagEncodedBy:
                    nullable: true
                    type: string
                tagIsbn:
                    nullable: true
                    type: string
                tagLanguage:
                    nullable: true
                    type: string
                tagASIN:
                    nullable: true
                    type: string
                tagOverdriveMediaMarker:
                    nullable: true
                    type: string
                tagOriginalYear:
                    nullable: true
                    type: string
                tagReleaseCountry:
                    nullable: true
                    type: string
                tagReleaseType:
                    nullable: true
                    type: string
                tagReleaseStatus:
                    nullable: true
                    type: string
                tagISRC:
                    nullable: true
                    type: string
                tagMusicBrainzTrackId:
                    nullable: true
                    type: string
                tagMusicBrainzAlbumId:
                    nullable: true
                    type: string
                tagMusicBrainzAlbumArtistId:
                    nullable: true
                    type: string
                tagMusicBrainzArtistId:
                    nullable: true
                    type: string
        AudioTrack:
            description: An audio track.
            type: object
            properties:
                index:
                    description: The index of the audio track.
                    type: integer
                startOffset:
                    description: When in the audio file (in seconds) the track starts.
                    type: number
                duration:
                    description: The length (in seconds) of the audio track.
                    type: number
                title:
                    description: The filename of the audio file the audio track belongs to.
                    type: string
                contentUrl:
                    description: The URL path of the audio file.
                    type: string
                mimeType:
                    description: The MIME type of the audio file.
                    type: string
                metadata:
                    oneOf:
                        -
                            $ref: '#/components/schemas/FileMetadata'
                        - {}
                    description: The metadata of the audio file.
            example:
                index: 1
                startOffset: 0
                duration: 33854.905
                title: Terry Goodkind - SOT Bk01 - Wizards First Rule 01.mp3
                contentUrl: /s/item/li_8gch9ve09orgn4fdz8/Terry Goodkind - SOT Bk01 - Wizards First Rule 01.mp3
                mimeType: audio/mpeg
                metadata: {}
        EBookFile:
            description: An ebook file.
            type: object
            properties:
                ino:
                    description: The inode of the ebook file.
                    type: string
                metadata:
                    $ref: '#/components/schemas/FileMetadata'
                    description: The metadata of the ebook file.
                ebookFormat:
                    description: The ebook format of the ebook file.
                    type: string
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library file was added.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library file was last updated.
                    type: integer
            example:
                ino: '9463162'
                metadata: {}
                ebookFormat: epub
                addedAt: 1650621073750
                updatedAt: 1650621110769
        LibraryFile:
            description: A file in the library.
            type: object
            properties:
                ino:
                    description: The inode of the library file.
                    type: string
                metadata:
                    $ref: '#/components/schemas/FileMetadata'
                    description: The metadata for the library file.
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library file was added.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the library file was last updated.
                    type: integer
                fileType:
                    description: The type of file that the library file is (audio, image, etc.).
                    type: string
            example:
                ino: '649644248522215260'
                metadata: {}
                addedAt: 1650621052494
                updatedAt: 1650621052494
                fileType: audio
        FileMetadata:
            description: File metadata.
            type: object
            properties:
                filename:
                    description: The filename of the file.
                    type: string
                ext:
                    description: The file extension of the file.
                    type: string
                path:
                    description: The absolute path on the server of the file.
                    type: string
                relPath:
                    description: The path of the file, relative to the book's or podcast's folder.
                    type: string
                size:
                    description: The size (in bytes) of the file.
                    type: integer
                mtimeMs:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the file was last modified on disk.
                    type: integer
                ctimeMs:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the file status was changed on disk.
                    type: integer
                birthtimeMs:
                    format: int64
                    description: >-
                        The time (in ms since POSIX epoch) when the file was created on disk. Will be 0 if
                        unknown.
                    type: integer
            example:
                filename: Terry Goodkind - SOT Bk01 - Wizards First Rule 01.mp3
                ext: .mp3
                path: >-
                    /audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/Terry Goodkind - SOT Bk01 -
                    Wizards First Rule 01.mp3
                relPath: Terry Goodkind - SOT Bk01 - Wizards First Rule 01.mp3
                size: 48037888
                mtimeMs: 1632223180278
                ctimeMs: 1645978261001
                birthtimeMs: 0
        Author:
            description: An author.
            type: object
            properties:
                id:
                    description: The ID of the author.
                    type: string
                asin:
                    nullable: true
                    description: The ASIN of the author. Will be null if unknown.
                    type: string
                name:
                    description: The name of the author.
                    type: string
                description:
                    nullable: true
                    description: A description of the author. Will be null if there is none.
                    type: string
                imagePath:
                    nullable: true
                    description: The absolute path for the author image. Will be null if there is no image.
                    type: string
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the author was added.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the author was last updated.
                    type: integer
            example:
                id: aut_z3leimgybl7uf3y4ab
                name: Terry Goodkind
                addedAt: 1650621073750
                updatedAt: 1650621073750
        AuthorMinified:
            description: Minified author object.
            type: object
            properties:
                id:
                    description: The ID of the author.
                    type: string
                name:
                    description: The name of the author.
                    type: string
            example:
                id: aut_z3leimgybl7uf3y4ab
                name: Terry Goodkind
        AuthorExpanded:
            description: Expanded author.
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/Author'
            properties:
                numBooks:
                    description: The number of books associated with the author in the library.
                    type: integer
            example:
                id: aut_z3leimgybl7uf3y4ab
                name: Terry Goodkind
                addedAt: 1650621073750
                updatedAt: 1650621073750
                numBooks: 1
        Series:
            description: A series.
            type: object
            properties:
                id:
                    description: The ID of the series.
                    type: string
                name:
                    description: The name of the series.
                    type: string
                description:
                    nullable: true
                    description: A description for the series. Will be null if there is none.
                    type: string
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the series was added.
                    type: integer
                updatedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the series was last updated.
                    type: integer
            example:
                id: ser_cabkj4jeu8be3rap4g
                name: Sword of Truth
                addedAt: 1650621073750
                updatedAt: 1650621073750
        SeriesNumBooks:
            description: Series with the number of books.
            type: object
            properties:
                id:
                    description: The ID of the series.
                    type: string
                name:
                    description: The name of the series.
                    type: string
                nameIgnorePrefix:
                    description: The name of the series with any prefix moved to the end.
                    type: string
                libraryItemIds:
                    description: The IDs of the library items in the series.
                    type: array
                    items:
                        type: string
                numBooks:
                    description: The number of books in the series.
                    type: integer
            example:
                id: ser_cabkj4jeu8be3rap4g
                name: Sword of Truth
                nameIgnorePrefix: Sword of Truth
                libraryItemIds:
                    - li_8gch9ve09orgn4fdz8
                numBooks: 1
        SeriesBooks:
            description: Series with books.
            type: object
            properties:
                id:
                    description: The ID of the series.
                    type: string
                name:
                    description: The name of the series.
                    type: string
                nameIgnorePrefix:
                    description: The name of the series with any prefix moved to the end.
                    type: string
                nameIgnorePrefixSort:
                    description: The name of the series with any prefix removed.
                    type: string
                type:
                    description: Will always be series.
                    type: string
                books:
                    description: The library items that contain the books in the series.
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItem'
                addedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the series was added.
                    type: integer
                totalDuration:
                    description: The combined duration (in seconds) of all books in the series.
                    type: number
            example:
                id: ser_cabkj4jeu8be3rap4g
                name: Sword of Truth
                nameIgnorePrefix: Sword of Truth
                nameIgnorePrefixSort: Sword of Truth
                type: series
                books:
                    - ...
                addedAt: 1650621073750
                totalDuration: 12000.946
        SeriesSequence:
            description: Series sequence for a book.
            type: object
            properties:
                id:
                    description: The ID of the series.
                    type: string
                name:
                    description: The name of the series.
                    type: string
                sequence:
                    nullable: true
                    description: The position in the series the book is.
                    type: string
            example:
                id: ser_cabkj4jeu8be3rap4g
                name: Sword of Truth
                sequence: '1'
        Collection:
            description: A collection of books.
            type: object
            properties:
                id:
                    description: The ID of the collection.
                    type: string
                libraryId:
                    description: The ID of the library the collection belongs to.
                    type: string
                userId:
                    description: The ID of the user that created the collection.
                    type: string
                name:
                    description: The name of the collection.
                    type: string
                description:
                    nullable: true
                    description: The collection's description. Will be null if there is none.
                    type: string
                books:
                    description: The books that belong to the collection.
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItem'
                lastUpdate:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the collection was last updated.
                    type: integer
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the collection was created.
                    type: integer
            example:
                id: col_fpfstanv6gd7tq2qz7
                libraryId: lib_c1u6t4p45c35rf0nzd
                userId: root
                name: Favorites
                books:
                    - ...
                lastUpdate: 1650621110769
                createdAt: 1650621073750
        CollectionExpanded:
            description: A collection of expanded books.
            type: object
            properties:
                id:
                    description: The ID of the collection.
                    type: string
                libraryId:
                    description: The ID of the library the collection belongs to.
                    type: string
                userId:
                    description: The ID of the user that created the collection.
                    type: string
                name:
                    description: The name of the collection.
                    type: string
                description:
                    nullable: true
                    description: The collection's description. Will be null if there is none.
                    type: string
                books:
                    description: The books that belong to the collection.
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemExpanded'
                lastUpdate:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the collection was last updated.
                    type: integer
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the collection was created.
                    type: integer
            example:
                id: col_fpfstanv6gd7tq2qz7
                libraryId: lib_c1u6t4p45c35rf0nzd
                userId: root
                name: Favorites
                books:
                    - ...
                lastUpdate: 1650621110769
                createdAt: 1650621073750
        Playlist:
            description: A playlist.
            type: object
            properties:
                id:
                    description: The ID of the playlist.
                    type: string
                libraryId:
                    description: The ID of the library the playlist belongs to.
                    type: string
                userId:
                    description: The ID of the user the playlist belongs to.
                    type: string
                name:
                    description: The playlist's name.
                    type: string
                description:
                    nullable: true
                    description: The playlist's description.
                    type: string
                coverPath:
                    nullable: true
                    description: The path of the playlist's cover.
                    type: string
                items:
                    description: The items in the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItem'
                lastUpdate:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the playlist was last updated.
                    type: integer
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the playlist was created.
                    type: integer
            example:
                id: pl_qbwet64998s5ra6dcu
                libraryId: lib_c1u6t4p45c35rf0nzd
                userId: root
                name: Favorites
                items:
                    - ...
                lastUpdate: 1669623431313
                createdAt: 1669623431313
        PlaylistExpanded:
            description: A playlist with expanded items.
            type: object
            properties:
                id:
                    description: The ID of the playlist.
                    type: string
                libraryId:
                    description: The ID of the library the playlist belongs to.
                    type: string
                userId:
                    description: The ID of the user the playlist belongs to.
                    type: string
                name:
                    description: The playlist's name.
                    type: string
                description:
                    nullable: true
                    description: The playlist's description.
                    type: string
                coverPath:
                    nullable: true
                    description: The path of the playlist's cover.
                    type: string
                items:
                    description: The items in the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItemExpanded'
                lastUpdate:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the playlist was last updated.
                    type: integer
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the playlist was created.
                    type: integer
            example:
                id: pl_qbwet64998s5ra6dcu
                libraryId: lib_c1u6t4p45c35rf0nzd
                userId: root
                name: Favorites
                items:
                    - ...
                lastUpdate: 1669623431313
                createdAt: 1669623431313
        PlaylistItem:
            description: A playlist item.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item the playlist item is for.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode the playlist item is for.
                    type: string
            example:
                libraryItemId: li_8gch9ve09orgn4fdz8
        PlaylistItemExpanded:
            description: An expanded playlist item.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item.
                    type: string
                episodeId:
                    nullable: true
                    description: The episode ID if it's a podcast episode.
                    type: string
                libraryItem:
                    oneOf:
                        -
                            $ref: '#/components/schemas/LibraryItemExpanded'
                        -
                            $ref: '#/components/schemas/LibraryItemMinified'
                    description: The library item. Will be Library Item Minified if episodeId is not null.
                episode:
                    $ref: '#/components/schemas/PodcastEpisodeExpanded'
                    description: The podcast episode if episodeId is not null.
            example:
                libraryItemId: li_8gch9ve09orgn4fdz8
                libraryItem: {}
                episode: {}
        MediaProgress:
            description: Media Progress
            type: object
            properties:
                id:
                    description: The ID of the media progress. For podcasts it's libraryItemId-episodeId.
                    type: string
                libraryItemId:
                    description: The ID of the library item.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode. Null if for a book.
                    type: string
                duration:
                    description: Total duration in seconds.
                    type: number
                progress:
                    description: Percentage completion progress. 1 if finished.
                    type: number
                currentTime:
                    description: Current time in seconds.
                    type: number
                isFinished:
                    description: Whether the media is finished.
                    type: boolean
                hideFromContinueListening:
                    description: Whether to hide from 'Continue Listening'.
                    type: boolean
                lastUpdate:
                    format: int64
                    description: When progress was last updated.
                    type: integer
                startedAt:
                    format: int64
                    description: When progress was created.
                    type: integer
                finishedAt:
                    nullable: true
                    format: int64
                    description: When media was finished.
                    type: integer
            example:
                id: li_bufnnmp4y5o2gbbxfm-ep_lh6ko39pumnrma3dhv
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                episodeId: ep_lh6ko39pumnrma3dhv
                duration: 1454.18449
                progress: 0.011193983371394644
                currentTime: 16.278117
                isFinished: false
                hideFromContinueListening: false
                lastUpdate: 1668120246620
                startedAt: 1668120083771
        MediaProgressWithMedia:
            description: Media Progress with media included.
            type: object
            properties:
                id:
                    description: The ID of the media progress. For podcasts it's libraryItemId-episodeId.
                    type: string
                libraryItemId:
                    description: The ID of the library item.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode. Null if for a book.
                    type: string
                duration:
                    description: Total duration in seconds.
                    type: number
                progress:
                    description: Percentage completion progress. 1 if finished.
                    type: number
                currentTime:
                    description: Current time in seconds.
                    type: number
                isFinished:
                    description: Whether the media is finished.
                    type: boolean
                hideFromContinueListening:
                    description: Whether to hide from 'Continue Listening'.
                    type: boolean
                lastUpdate:
                    format: int64
                    description: When progress was last updated.
                    type: integer
                startedAt:
                    format: int64
                    description: When progress was created.
                    type: integer
                finishedAt:
                    nullable: true
                    format: int64
                    description: When media was finished.
                    type: integer
                media:
                    oneOf:
                        -
                            $ref: '#/components/schemas/BookExpanded'
                        -
                            $ref: '#/components/schemas/PodcastExpanded'
                    description: Book Expanded or Podcast Expanded.
                episode:
                    $ref: '#/components/schemas/PodcastEpisode'
                    description: The podcast episode if this progress is for a podcast episode.
            example:
                id: li_bufnnmp4y5o2gbbxfm-ep_lh6ko39pumnrma3dhv
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                episodeId: ep_lh6ko39pumnrma3dhv
                duration: 1454.18449
                progress: 0.011193983371394644
                currentTime: 16.278117
                isFinished: false
                hideFromContinueListening: false
                lastUpdate: 1668120246620
                startedAt: 1668120083771
                media: {}
                episode: {}
        PlaybackSession:
            description: Playback Session
            type: object
            properties:
                id:
                    description: The ID of the playback session.
                    type: string
                userId:
                    description: The ID of the user.
                    type: string
                libraryId:
                    description: The ID of the library.
                    type: string
                libraryItemId:
                    description: The ID of the library item.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode if any.
                    type: string
                mediaType:
                    description: The media type (book or podcast).
                    type: string
                mediaMetadata:
                    oneOf:
                        -
                            $ref: '#/components/schemas/BookMetadata'
                        -
                            $ref: '#/components/schemas/PodcastMetadata'
                    description: The metadata of the library item's media.
                chapters:
                    description: Chapters if it's a book.
                    type: array
                    items:
                        $ref: '#/components/schemas/BookChapter'
                displayTitle:
                    description: The title of the playing item.
                    type: string
                displayAuthor:
                    description: The author of the playing item.
                    type: string
                coverPath:
                    description: The cover path.
                    type: string
                duration:
                    description: Total duration in seconds.
                    type: number
                playMethod:
                    description: Play method (0=Direct Play, 1=Direct Stream, 2=Transcode, 3=Local)
                    type: integer
                mediaPlayer:
                    description: The given media player.
                    type: string
                deviceInfo:
                    $ref: '#/components/schemas/DeviceInfo'
                    description: Device info.
                serverVersion:
                    description: The server version.
                    type: string
                date:
                    description: The day (YYYY-MM-DD) playback started.
                    type: string
                dayOfWeek:
                    description: The day of the week playback started.
                    type: string
                timeListening:
                    description: How long user has been listening with this session.
                    type: number
                startTime:
                    description: The time (in sec) where playback started.
                    type: number
                currentTime:
                    description: The current time in the item.
                    type: number
                startedAt:
                    format: int64
                    description: When the playback session started.
                    type: integer
                updatedAt:
                    format: int64
                    description: When last updated.
                    type: integer
            example:
                id: play_c786zm3qtjz6bd5q3n
                userId: root
                libraryId: lib_p9wkw2i85qy9oltijt
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                episodeId: ep_lh6ko39pumnrma3dhv
                mediaType: podcast
                mediaMetadata: {}
                chapters: []
                displayTitle: 1 - Pilot
                displayAuthor: Night Vale Presents
                coverPath: /metadata/items/li_bufnnmp4y5o2gbbxfm/cover.jpg
                duration: 1454.18449
                playMethod: 0
                mediaPlayer: unknown
                deviceInfo: {}
                serverVersion: 2.4.4
                date: '2022-11-11'
                dayOfWeek: Friday
                timeListening: 0
                startTime: 0
                currentTime: 0
                startedAt: 1668206493239
                updatedAt: 1668206493239
        PlaybackSessionExpanded:
            description: Expanded Playback Session
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/PlaybackSession'
            properties:
                audioTracks:
                    description: The audio tracks being played.
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioTrack'
                videoTrack:
                    nullable: true
                    description: The video track if any.
                    type: object
                libraryItem:
                    $ref: '#/components/schemas/LibraryItemExpanded'
                    description: The library item of the session.
            example:
                id: play_c786zm3qtjz6bd5q3n
                userId: root
                libraryId: lib_p9wkw2i85qy9oltijt
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                episodeId: ep_lh6ko39pumnrma3dhv
                mediaType: podcast
                mediaMetadata: {}
                chapters: []
                displayTitle: 1 - Pilot
                displayAuthor: Night Vale Presents
                coverPath: /metadata/items/li_bufnnmp4y5o2gbbxfm/cover.jpg
                duration: 1454.18449
                playMethod: 0
                mediaPlayer: unknown
                deviceInfo: {}
                serverVersion: 2.4.4
                date: '2022-11-11'
                dayOfWeek: Friday
                timeListening: 0
                startTime: 0
                currentTime: 0
                startedAt: 1668206493239
                updatedAt: 1668206493239
                audioTracks:
                    - ...
                libraryItem: {}
        DeviceInfo:
            description: Device Info
            type: object
            properties:
                id:
                    description: Unique identifier. UUIDv4
                    type: string
                userId:
                    description: User identifier. UUIDv4
                    type: string
                deviceId:
                    description: Device identifier.
                    type: string
                ipAddress:
                    nullable: true
                    description: The IP address that the request came from.
                    type: string
                browserName:
                    nullable: true
                    description: The browser name.
                    type: string
                browserVersion:
                    nullable: true
                    description: The browser version.
                    type: string
                osName:
                    nullable: true
                    description: The OS name.
                    type: string
                osVersion:
                    nullable: true
                    description: The OS version.
                    type: string
                deviceType:
                    nullable: true
                    description: The device type.
                    type: string
                manufacturer:
                    nullable: true
                    description: The device manufacturer.
                    type: string
                model:
                    nullable: true
                    description: The device model.
                    type: string
                sdkVersion:
                    nullable: true
                    description: The Android SDK version if applicable.
                    type: integer
                clientName:
                    description: Name of the client.
                    type: string
                clientVersion:
                    description: Version of the client.
                    type: string
            example:
                id: 69b7e852-23a6-4587-bed3-6a5966062e38
                userId: 3c479fe6-6bf8-44e4-a4a6-680c768b501c
                deviceId: 4dd05e7fadca538b
                ipAddress: 192.168.1.118
                browserName: Firefox
                browserVersion: '106.0'
                osName: Linux
                osVersion: x86_64
                clientName: Abs Web
                clientVersion: 2.3.3
        User:
            description: A user.
            type: object
            properties:
                id:
                    description: The ID of the user. root is the root user.
                    type: string
                username:
                    description: The username of the user.
                    type: string
                type:
                    description: The type of the user. Will be root, guest, user, or admin.
                    type: string
                token:
                    description: The authentication token of the user.
                    type: string
                mediaProgress:
                    description: The user's media progress.
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgress'
                seriesHideFromContinueListening:
                    description: The IDs of series to hide from Continue Series.
                    type: array
                    items:
                        type: string
                bookmarks:
                    description: The user's bookmarks.
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioBookmark'
                isActive:
                    description: Whether the user's account is active.
                    type: boolean
                isLocked:
                    description: Whether the user is locked.
                    type: boolean
                lastSeen:
                    nullable: true
                    format: int64
                    description: When the user was last seen. Null if never.
                    type: integer
                createdAt:
                    format: int64
                    description: When the user was created.
                    type: integer
                permissions:
                    $ref: '#/components/schemas/UserPermissions'
                    description: The user's permissions.
                librariesAccessible:
                    description: The libraries accessible to the user. Empty means all.
                    type: array
                    items:
                        type: string
                itemTagsAccessible:
                    description: The tags accessible to the user. Empty means all.
                    type: array
                    items:
                        type: string
            example:
                id: root
                username: root
                type: root
                token: exJhbGciOiJI6IkpXVCJ9.eyJ1c2Vyi5NDEyODc4fQ.ZraBFohS4Tg39NszY
                mediaProgress:
                    - ...
                seriesHideFromContinueListening: []
                bookmarks:
                    - ...
                isActive: true
                isLocked: false
                lastSeen: 1668296147437
                createdAt: 1666543632566
                permissions: {}
                librariesAccessible: []
                itemTagsAccessible: []
        UserWithProgressDetails:
            description: A user with progress details.
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/User'
            properties:
                mediaProgress:
                    description: mediaProgress is an Array of Media Progress with Media
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgressWithMedia'
        UserWithSession:
            description: A user with session info.
            type: object
            properties:
                id:
                    description: The ID of the user.
                    type: string
                username:
                    description: The username of the user.
                    type: string
                type:
                    description: The type of the user.
                    type: string
                session:
                    oneOf:
                        -
                            $ref: '#/components/schemas/PlaybackSessionExpanded'
                        - {}
                    description: The user's currently playing session.
                lastSeen:
                    nullable: true
                    format: int64
                    description: When the user was last seen.
                    type: integer
                createdAt:
                    format: int64
                    description: When the user was created.
                    type: integer
            example:
                id: root
                username: root
                type: root
                lastSeen: 1668296147437
                createdAt: 1666543632566
        UserPermissions:
            description: User Permissions
            type: object
            properties:
                download:
                    description: Whether the user can download items.
                    type: boolean
                update:
                    description: Whether the user can update library items.
                    type: boolean
                delete:
                    description: Whether the user can delete library items.
                    type: boolean
                upload:
                    description: Whether the user can upload items.
                    type: boolean
                accessAllLibraries:
                    description: Whether the user can access all libraries.
                    type: boolean
                accessAllTags:
                    description: Whether the user can access all tags.
                    type: boolean
                accessExplicitContent:
                    description: Whether the user can access explicit content.
                    type: boolean
        AudioBookmark:
            description: An audio bookmark.
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item the bookmark is for.
                    type: string
                title:
                    description: The title of the bookmark.
                    type: string
                time:
                    description: The time (in seconds) the bookmark is at.
                    type: number
                createdAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the bookmark was created.
                    type: integer
            example:
                libraryItemId: li_8gch9ve09orgn4fdz8
                title: the good part
                time: 16
                createdAt: 1668120083771
        Backup:
            description: A backup.
            type: object
            properties:
                id:
                    description: The ID of the backup. Will be the date/time created.
                    type: string
                backupMetadataCovers:
                    description: Whether the backup includes metadata covers.
                    type: boolean
                backupDirPath:
                    description: The backup directory path.
                    type: string
                datePretty:
                    description: A human-readable date.
                    type: string
                fullPath:
                    description: The full path of the backup.
                    type: string
                path:
                    description: The path of the backup relative to metadata directory.
                    type: string
                filename:
                    description: The filename of the backup.
                    type: string
                fileSize:
                    description: The size (in bytes) of the backup file.
                    type: integer
                createdAt:
                    format: int64
                    description: When the backup was created.
                    type: integer
                serverVersion:
                    description: The server version at backup time.
                    type: string
            example:
                id: 2022-11-14T0130
                backupMetadataCovers: true
                backupDirPath: /metadata/backups
                datePretty: Mon, Nov 14 2022 01:30
                fullPath: /metadata/backups/2022-11-14T0130.audiobookshelf
                path: backups/2022-11-14T0130.audiobookshelf
                filename: 2022-11-14T0130.audiobookshelf
                fileSize: 7776983
                createdAt: 1668411000329
                serverVersion: 2.2.4
        NotificationSettings:
            description: Notification Settings
            type: object
            properties:
                id:
                    description: The ID of the notification settings.
                    type: string
                appriseType:
                    description: The type of Apprise to use.
                    type: string
                appriseApiUrl:
                    nullable: true
                    description: The Apprise API URL.
                    type: string
                notifications:
                    description: The set notifications.
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'
                maxFailedAttempts:
                    description: Max number of consecutive failures before disable.
                    type: integer
                maxNotificationQueue:
                    description: Max number of notifications in queue.
                    type: integer
                notificationDelay:
                    format: int64
                    description: Time (ms) between notification pushes.
                    type: integer
            example:
                id: notification-settings
                appriseType: api
                appriseApiUrl: https://apprise.example.com/notify
                notifications:
                    - ...
                maxFailedAttempts: 5
                maxNotificationQueue: 20
                notificationDelay: 1000
        Notification:
            description: A notification.
            type: object
            properties:
                id:
                    description: The ID of the notification.
                    type: string
                libraryId:
                    nullable: true
                    description: The ID of the library the notification is associated with.
                    type: string
                eventName:
                    description: The name of the event the notification will fire on.
                    type: string
                urls:
                    description: The Apprise URLs for the notification.
                    type: array
                    items:
                        type: string
                titleTemplate:
                    description: The template for the notification title.
                    type: string
                bodyTemplate:
                    description: The template for the notification body.
                    type: string
                enabled:
                    description: Whether the notification is enabled.
                    type: boolean
                type:
                    description: The notification's type.
                    type: string
                lastFiredAt:
                    nullable: true
                    format: int64
                    description: When the notification was last fired.
                    type: integer
                lastAttemptFailed:
                    description: Whether the last attempt failed.
                    type: boolean
                numConsecutiveFailedAttempts:
                    description: Number of consecutive failures.
                    type: integer
                numTimesFired:
                    description: Number of times fired.
                    type: integer
                createdAt:
                    format: int64
                    description: When the notification was created.
                    type: integer
            example:
                id: noti_nod281qwkj5ow7h7fi
                eventName: onPodcastEpisodeDownloaded
                urls:
                    - apprises://apprise.example.com/email
                titleTemplate: New {{podcastTitle}} Episode!
                bodyTemplate: '{{episodeTitle}} has been added to {{libraryName}} library.'
                enabled: true
                type: info
                lastFiredAt: 1668776410792
                lastAttemptFailed: false
                numConsecutiveFailedAttempts: 0
                numTimesFired: 5
                createdAt: 1666545142424
        NotificationEvent:
            description: Notification Event
            type: object
            properties:
                name:
                    description: The name of the notification event.
                    type: string
                requiresLibrary:
                    description: Whether the event depends on a library.
                    type: boolean
                libraryMediaType:
                    nullable: true
                    description: The library media type if required.
                    type: string
                description:
                    description: The description of the event.
                    type: string
                variables:
                    description: The variables of the event.
                    type: array
                    items:
                        type: string
                defaults:
                    type: object
                    properties:
                        title:
                            type: string
                        body:
                            type: string
                testData:
                    description: Test data for the event.
                    type: object
            example:
                name: onPodcastEpisodeDownloaded
                requiresLibrary: true
                libraryMediaType: podcast
                description: Triggered when a podcast episode is auto-downloaded
                variables:
                    - libraryItemId
                    - libraryId
                    - libraryName
                    - mediaTags
                    - podcastTitle
                    - podcastAuthor
                    - podcastDescription
                    - podcastGenres
                    - episodeId
                    - episodeTitle
                    - episodeSubtitle
                    - episodeDescription
                defaults:
                    title: New {{podcastTitle}} Episode!
                    body: '{{episodeTitle}} has been added to {{libraryName}} library.'
                testData:
                    libraryItemId: li_notification_test
                    libraryId: lib_test
                    libraryName: Podcasts
                    podcastTitle: Abs Test Podcast
                    episodeId: ep_notification_test
                    episodeTitle: Successful Test
        ServerSettings:
            description: Server Settings
            type: object
            properties:
                id:
                    description: The ID of the server settings.
                    type: string
                scannerFindCovers:
                    description: Whether the scanner will attempt to find covers.
                    type: boolean
                scannerCoverProvider:
                    description: Which metadata provider to use if find covers enabled.
                    type: string
                scannerParseSubtitle:
                    description: Whether to parse subtitles from folder names.
                    type: boolean
                scannerPreferMatchedMetadata:
                    description: Whether matched data overrides item details in Quick Match.
                    type: boolean
                scannerDisableWatcher:
                    description: Disable folder watcher?
                    type: boolean
                storeCoverWithItem:
                    description: Store covers in item's folder?
                    type: boolean
                storeMetadataWithItem:
                    description: Store metadata files in item's folder?
                    type: boolean
                metadataFileFormat:
                    description: Must be json or abs.
                    type: string
                rateLimitLoginRequests:
                    description: Max login requests per window.
                    type: integer
                rateLimitLoginWindow:
                    description: Length (ms) of login rate limit window.
                    type: integer
                backupSchedule:
                    description: Cron expression for automatic backups.
                    type: string
                backupsToKeep:
                    description: Number of backups to keep.
                    type: integer
                maxBackupSize:
                    description: Max backup size (GB).
                    type: integer
                loggerDailyLogsToKeep:
                    description: Number of daily logs to keep.
                    type: integer
                loggerScannerLogsToKeep:
                    description: Number of scanner logs to keep.
                    type: integer
                homeBookshelfView:
                    description: Use skeuomorphic design on home page?
                    type: integer
                bookshelfView:
                    description: Use skeuomorphic design on other pages?
                    type: integer
                sortingIgnorePrefix:
                    description: Ignore prefixes when sorting?
                    type: boolean
                sortingPrefixes:
                    description: Prefixes to ignore if sortingIgnorePrefix is true.
                    type: array
                    items:
                        type: string
                chromecastEnabled:
                    description: Enable Chromecast?
                    type: boolean
                dateFormat:
                    description: >-
                        Date format. Options are MM/dd/yyyy, dd/MM/yyyy, dd.MM.yyyy, yyyy-MM-dd, MMM do, yyyy,
                        MMMM do, yyyy, dd MMM yyyy, or dd MMMM yyyy.
                    type: string
                timeFormat:
                    description: Time format.
                    type: string
                language:
                    description: Default server language.
                    type: string
                logLevel:
                    description: Log level (1=debug,2=info,3=warnings).
                    type: integer
                version:
                    description: Server version.
                    type: string
            example:
                id: server-settings
                scannerFindCovers: false
                scannerCoverProvider: google
                scannerParseSubtitle: false
                scannerPreferMatchedMetadata: false
                scannerDisableWatcher: true
                storeCoverWithItem: false
                storeMetadataWithItem: false
                metadataFileFormat: json
                rateLimitLoginRequests: 10
                rateLimitLoginWindow: 600000
                backupSchedule: 30 1 * * *
                backupsToKeep: 2
                maxBackupSize: 1
                loggerDailyLogsToKeep: 7
                loggerScannerLogsToKeep: 2
                homeBookshelfView: 1
                bookshelfView: 1
                sortingIgnorePrefix: false
                sortingPrefixes:
                    - the
                    - a
                chromecastEnabled: false
                dateFormat: MM/dd/yyyy
                timeFormat: HH:mm
                language: en-us
                logLevel: 2
                version: 2.2.5
        RSSFeed:
            description: RSS Feed
            type: object
            properties:
                id:
                    description: The ID of the RSS feed. UUIDv4
                    type: string
                slug:
                    description: The slug of the RSS feed.
                    type: string
                userId:
                    description: The ID of the user that created the RSS feed. UUIDv4
                    type: string
                entityType:
                    description: The type of entity the RSS feed is for.
                    type: string
                entityId:
                    description: The ID of the entity the RSS feed is for. UUIDv4
                    type: string
                coverPath:
                    description: The path of the cover to use for the RSS feed.
                    type: string
                serverAddress:
                    description: The server's address.
                    type: string
                feedUrl:
                    description: The full URL of the RSS feed.
                    type: string
                meta:
                    $ref: '#/components/schemas/RSSFeedMetadata'
                    description: The RSS feed's metadata.
                episodes:
                    description: The RSS feed's episodes.
                    type: array
                    items:
                        $ref: '#/components/schemas/RSSFeedEpisode'
                createdAt:
                    format: int64
                    description: When the RSS feed was created.
                    type: integer
                updatedAt:
                    format: int64
                    description: When the RSS feed was last updated.
                    type: integer
            example:
                id: 169cf198-8645-4d73-8948-4e60fb329c5a
                slug: 169cf198-8645-4d73-8948-4e60fb329c5a
                userId: root
                entityType: item
                entityId: 169cf198-8645-4d73-8948-4e60fb329c5a
                coverPath: /metadata/items/169cf198-8645-4d73-8948-4e60fb329c5a/cover.jpg
                serverAddress: https://abs.example.com
                feedUrl: https://abs.example.com/feed/169cf198-8645-4d73-8948-4e60fb329c5a
                meta: {}
                episodes:
                    - ...
                createdAt: 1669031843179
                updatedAt: 1669031843179
        RSSFeedMinified:
            description: Minified RSS Feed
            type: object
            properties:
                id:
                    description: The ID of the RSS feed.
                    type: string
                entityType:
                    description: The type of entity the RSS feed is for.
                    type: string
                entityId:
                    description: The ID of the entity the RSS feed is for.
                    type: string
                feedUrl:
                    description: The full URL of the RSS feed.
                    type: string
                meta:
                    $ref: '#/components/schemas/RSSFeedMetadataMinified'
                    description: RSS feed metadata minified.
            example:
                id: 2294c42b-a964-48fe-a544-982fab209a5f
                entityType: item
                entityId: 169cf198-8645-4d73-8948-4e60fb329c5a
                feedUrl: https://abs.example.com/feed/169cf198-8645-4d73-8948-4e60fb329c5a
                meta:
                    title: Welcome to Night Vale
                    description: |4-

                              Twice-monthly community updates...
                    preventIndexing: true
        RSSFeedMetadata:
            description: RSS Feed Metadata
            type: object
            properties:
                title:
                    description: The title of the entity the RSS feed is for.
                    type: string
                description:
                    nullable: true
                    description: The description of the entity.
                    type: string
                author:
                    nullable: true
                    description: The author of the entity.
                    type: string
                imageUrl:
                    description: The URL of the RSS feed's image.
                    type: string
                feedUrl:
                    description: The URL of the RSS feed.
                    type: string
                link:
                    description: The URL of the entity the RSS feed is for.
                    type: string
                explicit:
                    description: Whether the RSS feed's contents are explicit.
                    type: boolean
                type:
                    nullable: true
                    description: The type of the RSS feed.
                    type: string
                language:
                    nullable: true
                    description: The language of the RSS feed.
                    type: string
                preventIndexing:
                    description: Whether to prevent indexing.
                    type: boolean
                ownerName:
                    nullable: true
                    description: The owner name of the RSS feed.
                    type: string
                ownerEmail:
                    nullable: true
                    description: The owner email of the RSS feed.
                    type: string
        RSSFeedMetadataMinified:
            description: Minified RSS Feed Metadata
            type: object
            properties:
                title:
                    description: The title of the entity.
                    type: string
                description:
                    nullable: true
                    description: The description.
                    type: string
                preventIndexing:
                    description: Whether indexing is prevented.
                    type: boolean
                ownerName:
                    nullable: true
                    description: The owner name.
                    type: string
                ownerEmail:
                    nullable: true
                    description: The owner email.
                    type: string
        RSSFeedEpisode:
            description: An RSS feed episode.
            type: object
            properties:
                id:
                    description: The ID of the RSS feed episode.
                    type: string
                title:
                    description: The title of the RSS feed episode.
                    type: string
                description:
                    description: An HTML encoded description of the RSS feed episode.
                    type: string
                enclosure:
                    $ref: '#/components/schemas/RSSFeedEpisodeEnclosure'
                    description: Download info for the RSS feed episode.
                pubDate:
                    description: The RSS feed episode's publication date.
                    type: string
                link:
                    description: A URL to show to the RSS feed user.
                    type: string
                author:
                    description: The author of the RSS feed episode.
                    type: string
                explicit:
                    description: Whether the episode is explicit.
                    type: boolean
                duration:
                    description: The duration (in seconds).
                    type: number
                season:
                    nullable: true
                    description: The season of the episode.
                    type: string
                episode:
                    nullable: true
                    description: The episode number.
                    type: string
                episodeType:
                    nullable: true
                    description: The type of the episode.
                    type: string
                libraryItemId:
                    description: The ID of the library item.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode if any.
                    type: string
                trackIndex:
                    description: The track index.
                    type: integer
                fullPath:
                    description: The path on the server of the audio file.
                    type: string
            example:
                id: ep_lh6ko39pumnrma3dhv
                title: 1 - Pilot
                description: <div>...</div>
                enclosure:
                    url: >-
                        https://abs.example.com/feed/li_bufnnmp4y5o2gbbxfm/item/ep_lh6ko39pumnrma3dhv/1 -
                        Pilot.mp3
                    type: audio/mpeg
                    size: 23653735
                pubDate: Fri, 15 Jun 2012 12:00:00 -0000
                link: https://abs.example.com/item/li_bufnnmp4y5o2gbbxfm
                author: Night Vale Presents
                explicit: false
                duration: 1454.18449
                libraryItemId: li_bufnnmp4y5o2gbbxfm
                episodeId: ep_lh6ko39pumnrma3dhv
                trackIndex: 0
                fullPath: /podcasts/Welcome to Night Vale/1 - Pilot.mp3
        Stream:
            description: A stream.
            type: object
            properties:
                id:
                    description: The ID of the stream. Same as playback session ID. UUIDv4
                    type: string
                userId:
                    description: The ID of the user. UUIDv4
                    type: string
                libraryItem:
                    $ref: '#/components/schemas/LibraryItemExpanded'
                    description: The library item the stream is for.
                episode:
                    nullable: true
                    $ref: '#/components/schemas/PodcastEpisodeExpanded'
                    description: The episode if it's a podcast.
                segmentLength:
                    description: The length (in seconds) of each segment.
                    type: integer
                playlistPath:
                    description: The path on the server of the stream output.
                    type: string
                clientPlaylistUri:
                    description: The URI path for the client to access the stream.
                    type: string
                startTime:
                    description: The time (in seconds) where playback started.
                    type: number
                segmentStartNumber:
                    description: The segment where transcoding began.
                    type: integer
                isTranscodeComplete:
                    description: Whether transcoding is complete.
                    type: boolean
            example:
                id: 5a3046cd-11ff-43c9-a495-c2fbdca93e9d
                userId: root
                libraryItem: {}
                episode: {}
                segmentLength: 6
                playlistPath: /metadata/streams/5a3046cd-11ff-43c9-a495-c2fbdca93e9d/output.m3u8
                clientPlaylistUri: /hls/5a3046cd-11ff-43c9-a495-c2fbdca93e9d/output.m3u8
                startTime: 0
                segmentStartNumber: 0
                isTranscodeComplete: false
        StreamProgress:
            description: Stream Progress
            type: object
            properties:
                stream:
                    description: The ID of the stream.
                    type: string
                percent:
                    description: A human-readable percentage of transcode completion.
                    type: string
                chunks:
                    description: The segment ranges transcoded.
                    type: array
                    items:
                        type: string
                numSegments:
                    description: The total number of segments.
                    type: integer
            example:
                stream: play_c786zm3qtjz6bd5q3n
                percent: 8.66%
                chunks:
                    - 0-536
                numSegments: 6200
        RSSFeedEpisodeEnclosure:
            description: An RSS feed episode enclosure info.
            type: object
            properties:
                url:
                    description: The URL where the RSS feed episode's audio file was downloaded from.
                    type: string
                type:
                    description: The MIME type of the RSS feed episode's audio file.
                    type: string
                length:
                    description: >-
                        The size (in bytes) that was reported when downloading the RSS feed episode's audio
                        file.
                    type: string
            example:
                url: https://www.podtrac.com/pts/redirect.mp3/dovetail...
                type: audio/mpeg
                length: '20588611'
        LoginRequest:
            required:
                - username
                - password
            type: object
            properties:
                username:
                    description: The username to log in with.
                    type: string
                password:
                    description: The password of the user.
                    type: string
        LogoutRequest:
            type: object
            properties:
                socketId:
                    description: The ID of the connected socket.
                    type: string
            additionalProperties: false
        InitServerRequest:
            required:
                - newRoot
            type: object
            properties:
                newRoot:
                    required:
                        - username
                    type: object
                    properties:
                        username:
                            description: The username of the new root user
                            type: string
                        password:
                            description: The password of the new root user (may be empty)
                            type: string
        LoginResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
                userDefaultLibraryId:
                    description: The ID of the first library accessible by the user.
                    type: string
                serverSettings:
                    $ref: '#/components/schemas/ServerSettings'
                Source:
                    description: The server's installation source.
                    type: string
        AuthOpenIDCallbackResponse:
            required:
                - user
                - serverSettings
            type: object
            properties:
                userDefaultLibraryId:
                    type: string
                serverSettings:
                    $ref: '#/components/schemas/ServerSettings'
                Source:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
                ereaderDevices:
                    type: array
                    items:
                        type: object
        StatusResponse:
            type: object
            properties:
                isInit:
                    description: Whether the server has been initialized
                    type: boolean
                language:
                    description: The server's default language
                    type: string
                ConfigPath:
                    description: The server's config path (only if isInit is false)
                    type: string
                MetadataPath:
                    description: The server's metadata path (only if isInit is false)
                    type: string
        PingResponse:
            type: object
            properties:
                success:
                    description: Will always be true.
                    type: boolean
                    example: true
        CreateLibraryRequest:
            required:
                - name
                - folders
            type: object
            properties:
                name:
                    type: string
                folders:
                    type: array
                    items:
                        required:
                            - fullPath
                        type: object
                        properties:
                            fullPath:
                                type: string
                icon:
                    default: database
                    type: string
                mediaType:
                    default: book
                    enum:
                        - book
                        - podcast
                    type: string
                provider:
                    default: google
                    type: string
                settings:
                    type: object
                    properties:
                        coverAspectRatio:
                            default: 1
                            type: integer
                        disableWatcher:
                            default: false
                            type: boolean
                        skipMatchingMediaWithAsin:
                            default: false
                            type: boolean
                        skipMatchingMediaWithIsbn:
                            default: false
                            type: boolean
                        autoScanCronExpression:
                            nullable: true
                            type: string
        UpdateLibraryRequest:
            type: object
            properties:
                name:
                    type: string
                folders:
                    type: array
                    items:
                        type: object
                        properties:
                            fullPath:
                                type: string
                displayOrder:
                    type: integer
                icon:
                    type: string
                provider:
                    type: string
                settings:
                    type: object
                    properties:
                        coverAspectRatio:
                            type: integer
                        disableWatcher:
                            type: boolean
                        skipMatchingMediaWithAsin:
                            type: boolean
                        skipMatchingMediaWithIsbn:
                            type: boolean
                        autoScanCronExpression:
                            nullable: true
                            type: string
        ReorderLibrariesRequest:
            type: array
            items:
                required:
                    - id
                    - newOrder
                type: object
                properties:
                    id:
                        type: string
                    newOrder:
                        type: integer
        GetAllLibrariesResponse:
            type: object
            properties:
                libraries:
                    type: array
                    items:
                        $ref: '#/components/schemas/Library'
        LibraryResponse:
            type: object
            allOf:
                -
                    $ref: '#/components/schemas/Library'
        GetLibraryResponse:
            type: object
            properties:
                filterdata:
                    $ref: '#/components/schemas/LibraryFilterData'
                issues:
                    type: integer
                numUserPlaylists:
                    type: integer
                library:
                    $ref: '#/components/schemas/Library'
        GetLibraryItemsResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemExpanded'
                total:
                    type: integer
                limit:
                    type: integer
                page:
                    type: integer
                sortBy:
                    type: string
                sortDesc:
                    type: boolean
                filterBy:
                    type: string
                mediaType:
                    type: string
                minified:
                    type: boolean
                collapseseries:
                    type: boolean
                include:
                    type: string
        EmptyResponse:
            description: Empty response.
            type: object
        GetEpisodeDownloadsResponse:
            type: object
            properties:
                currentDownload:
                    $ref: '#/components/schemas/PodcastEpisodeDownload'
                queue:
                    type: array
                    items:
                        $ref: '#/components/schemas/PodcastEpisodeDownload'
        GetLibrarySeriesResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/SeriesBooks'
                total:
                    type: integer
                limit:
                    type: integer
                page:
                    type: integer
                sortBy:
                    type: string
                sortDesc:
                    type: boolean
                filterBy:
                    type: string
                minified:
                    type: boolean
                include:
                    type: string
        GetLibraryCollectionsResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/CollectionExpanded'
                total:
                    type: integer
                limit:
                    type: integer
                page:
                    type: integer
                sortBy:
                    type: string
                sortDesc:
                    type: boolean
                filterBy:
                    type: string
                minified:
                    type: boolean
                include:
                    type: string
        GetLibraryPlaylistsResponse:
            type: object
            properties:
                results:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistExpanded'
                total:
                    type: integer
                limit:
                    type: integer
                page:
                    type: integer
        GetLibraryPersonalizedResponse:
            type: array
            items:
                $ref: '#/components/schemas/Shelf'
        GetLibraryFilterDataResponse:
            $ref: '#/components/schemas/LibraryFilterData'
        SearchLibraryResponse:
            type: object
            properties:
                book:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemSearchResult'
                tags:
                    type: array
                    items:
                        type: string
                authors:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorExpanded'
                series:
                    type: array
                    items:
                        $ref: '#/components/schemas/SeriesBooks'
        GetLibraryStatsResponse:
            type: object
            properties:
                totalItems:
                    type: integer
                totalAuthors:
                    type: integer
                totalGenres:
                    type: integer
                totalDuration:
                    type: number
                longestItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemDurationStats'
                numAudioTrack:
                    type: integer
                totalSize:
                    type: integer
                largestItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemSizeStats'
                authorsWithCount:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorStats'
                genresWithCount:
                    type: array
                    items:
                        $ref: '#/components/schemas/GenreStats'
        GetLibraryAuthorsResponse:
            type: object
            properties:
                authors:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthorExpanded'
        GetLibraryRecentEpisodesResponse:
            type: object
            properties:
                episodes:
                    type: array
                    items:
                        $ref: '#/components/schemas/PodcastEpisodeExpanded'
                total:
                    type: integer
                limit:
                    type: integer
                page:
                    type: integer
        ReorderLibrariesResponse:
            type: object
            properties:
                libraries:
                    type: array
                    items:
                        $ref: '#/components/schemas/Library'
        UpdateItemMediaRequest:
            type: object
        UpdateItemMediaResponse:
            type: object
            properties:
                updated:
                    type: boolean
                libraryItem:
                    $ref: '#/components/schemas/LibraryItemExpanded'
        UploadItemCoverRequest:
            type: object
            properties:
                cover:
                    format: binary
                    type: string
        UploadItemCoverResponse:
            type: object
            properties:
                success:
                    type: boolean
                cover:
                    type: string
        UpdateItemCoverRequest:
            required:
                - cover
            type: object
            properties:
                cover:
                    type: string
        UploadItemCoverRequestJson:
            type: object
            properties:
                url:
                    type: string
        UpdateItemCoverResponse:
            type: object
            properties:
                success:
                    type: boolean
                cover:
                    type: string
        MatchItemRequest:
            type: object
            properties:
                provider:
                    default: google
                    type: string
                title:
                    type: string
                author:
                    type: string
                overrideDefaults:
                    default: false
                    type: boolean
                isbn:
                    type: string
                asin:
                    type: string
        MatchItemResponse:
            type: object
            properties:
                updated:
                    type: boolean
                libraryItem:
                    $ref: '#/components/schemas/LibraryItemExpanded'
        PlayItemRequest:
            type: object
            properties:
                deviceInfo:
                    type: object
                forceDirectPlay:
                    default: false
                    type: boolean
                forceTranscode:
                    default: false
                    type: boolean
                supportedMimeTypes:
                    type: array
                    items:
                        type: string
                mediaPlayer:
                    default: unknown
                    type: string
        UpdateItemTracksRequest:
            required:
                - orderedFileData
            type: object
            properties:
                orderedFileData:
                    type: array
                    items:
                        type: object
                        properties:
                            ino:
                                type: string
                            exclude:
                                default: false
                                type: boolean
        ScanItemResponse:
            type: object
            properties:
                result:
                    type: string
        ToneObjectResponse:
            type: object
        UpdateItemChaptersRequest:
            required:
                - chapters
            type: object
            properties:
                chapters:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            start:
                                type: number
                            end:
                                type: number
                            title:
                                type: string
        UpdateItemChaptersResponse:
            type: object
            properties:
                success:
                    type: boolean
                updated:
                    type: boolean
        ToneScanResponse:
            type: object
        BatchDeleteItemsRequest:
            required:
                - libraryItemIds
            type: object
            properties:
                libraryItemIds:
                    type: array
                    items:
                        type: string
        BatchUpdateItemsRequest:
            type: array
            items:
                type: object
                properties:
                    id:
                        type: string
                    mediaPayload:
                        type: object
        BatchUpdateItemsResponse:
            type: object
            properties:
                success:
                    type: boolean
                updates:
                    type: integer
        BatchGetItemsRequest:
            required:
                - libraryItemIds
            type: object
            properties:
                libraryItemIds:
                    type: array
                    items:
                        type: string
        BatchGetItemsResponse:
            type: object
            properties:
                libraryItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemExpanded'
        BatchQuickMatchItemsRequest:
            required:
                - libraryItemIds
            type: object
            properties:
                options:
                    type: object
                    properties:
                        provider:
                            default: google
                            type: string
                        overrideDefaults:
                            default: false
                            type: boolean
                libraryItemIds:
                    type: array
                    items:
                        type: string
        Shelf:
            description: A shelf representing a category of items in the personalized view.
            required:
                - id
                - label
                - labelStringKey
                - type
                - entities
                - category
            type: object
            properties:
                id:
                    description: The ID of the shelf.
                    type: string
                label:
                    description: The label of the shelf.
                    type: string
                labelStringKey:
                    description: The i18n key for the label.
                    type: string
                type:
                    description: The type of items this shelf holds. Can be book, series, authors, episode, or podcast.
                    type: string
                entities:
                    description: The entities displayed on the shelf.
                    type: array
                    items:
                        $ref: '#/components/schemas/ShelfEntity'
                category:
                    description: The category of the shelf.
                    type: string
        ShelfEntity:
            anyOf:
                -
                    $ref: '#/components/schemas/LibraryItemMinified'
                -
                    $ref: '#/components/schemas/Series'
                -
                    $ref: '#/components/schemas/AuthorExpanded'
            description: An entity displayed in a shelf.
            type: object
        LibraryItemDurationStats:
            description: Stats about a library item based on its duration.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                title:
                    description: The title of the library item.
                    type: string
                duration:
                    format: float
                    description: The duration of the library item in seconds.
                    type: number
        LibraryItemSizeStats:
            description: Stats about a library item based on its size.
            type: object
            properties:
                id:
                    description: The ID of the library item.
                    type: string
                title:
                    description: The title of the library item.
                    type: string
                size:
                    description: The size of the library item in bytes.
                    type: integer
        AuthorStats:
            description: Stats about an author in the library.
            type: object
            properties:
                id:
                    description: The ID of the author.
                    type: string
                name:
                    description: The name of the author.
                    type: string
                count:
                    description: The number of books by the author in the library.
                    type: integer
        GenreStats:
            description: Stats about a genre in the library.
            type: object
            properties:
                genre:
                    description: The name of the genre.
                    type: string
                count:
                    description: The number of items in the library with this genre.
                    type: integer
        LibraryItemSearchResult:
            description: ''
            type: object
            properties:
                libraryItem:
                    $ref: '#/components/schemas/LibraryItem'
                    description: The matched library item.
                matchKey:
                    description: What the library item was matched on.
                    type: string
                matchText:
                    description: The text in the library item that the query matched to.
                    type: string
        CreateUserRequest:
            required:
                - username
                - password
                - type
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                type:
                    enum:
                        - guest
                        - user
                        - admin
                    type: string
                mediaProgress:
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgress'
                bookmarks:
                    type: array
                    items:
                        $ref: '#/components/schemas/AudioBookmark'
                seriesHideFromContinueListening:
                    type: array
                    items:
                        type: string
                isActive:
                    default: true
                    type: boolean
                isLocked:
                    default: false
                    type: boolean
                lastSeen:
                    nullable: true
                    format: int64
                    type: integer
                createdAt:
                    format: int64
                    type: integer
                permissions:
                    $ref: '#/components/schemas/UserPermissions'
                librariesAccessible:
                    type: array
                    items:
                        type: string
                itemTagsAccessible:
                    type: array
                    items:
                        type: string
        UpdateUserRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                type:
                    enum:
                        - guest
                        - user
                        - admin
                    type: string
                seriesHideFromContinueListening:
                    type: array
                    items:
                        type: string
                isActive:
                    type: boolean
                permissions:
                    $ref: '#/components/schemas/UserPermissions'
                librariesAccessible:
                    type: array
                    items:
                        type: string
                itemTagsAccessible:
                    type: array
                    items:
                        type: string
        CreateUserResponse:
            required:
                - user
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetAllUsersResponse:
            required:
                - users
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserWithProgressDetails'
        GetOnlineUsersResponse:
            required:
                - usersOnline
                - openSessions
            type: object
            properties:
                usersOnline:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserWithSession'
                openSessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaybackSession'
        UpdateUserResponse:
            required:
                - success
                - user
            type: object
            properties:
                success:
                    type: boolean
                user:
                    $ref: '#/components/schemas/User'
        DeleteUserResponse:
            required:
                - success
            type: object
            properties:
                success:
                    type: boolean
        GetUserListeningSessionsResponse:
            required:
                - total
                - numPages
                - page
                - itemsPerPage
                - sessions
            type: object
            properties:
                total:
                    type: integer
                numPages:
                    type: integer
                page:
                    type: integer
                itemsPerPage:
                    type: integer
                sessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaybackSession'
        GetUserListeningStatsResponse:
            required:
                - totalTime
                - items
                - days
                - dayOfWeek
                - today
                - recentSessions
            type: object
            properties:
                totalTime:
                    format: int64
                    type: integer
                items:
                    type: object
                    additionalProperties:
                        type: object
                        properties:
                            id:
                                type: string
                            timeListening:
                                type: integer
                            mediaMetadata:
                                type: object
                days:
                    type: object
                    additionalProperties:
                        type: integer
                dayOfWeek:
                    type: object
                    additionalProperties:
                        type: integer
                today:
                    type: integer
                recentSessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaybackSession'
        CreateCollectionRequest:
            type: object
            properties:
                libraryId:
                    type: string
                name:
                    type: string
                description:
                    nullable: true
                    type: string
                books:
                    default: []
                    type: array
                    items:
                        type: string
        UpdateCollectionRequest:
            type: object
            properties:
                libraryId:
                    type: string
                name:
                    type: string
                description:
                    nullable: true
                    type: string
                books:
                    type: array
                    items:
                        type: string
        AddBookToCollectionRequest:
            type: object
            properties:
                id:
                    type: string
        BatchUpdateBooksRequest:
            type: object
            properties:
                books:
                    type: array
                    items:
                        type: string
        GetAllCollectionsResponse:
            type: object
            properties:
                collections:
                    type: array
                    items:
                        $ref: '#/components/schemas/CollectionExpanded'
        CreatePlaylistRequest:
            type: object
            properties:
                libraryId:
                    description: The ID of the library the playlist belongs to.
                    type: string
                name:
                    description: The playlist's name.
                    type: string
                description:
                    nullable: true
                    description: The playlist's description.
                    type: string
                coverPath:
                    nullable: true
                    description: The path of the playlist's cover.
                    type: string
                items:
                    description: The items in the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItem'
        GetAllPlaylistsResponse:
            type: object
            properties:
                playlists:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistExpanded'
        UpdatePlaylistRequest:
            type: object
            properties:
                name:
                    description: The playlist's name.
                    type: string
                description:
                    nullable: true
                    description: The playlist's description.
                    type: string
                coverPath:
                    nullable: true
                    description: The path of the playlist's cover.
                    type: string
                items:
                    description: The items in the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItem'
        AddPlaylistItemRequest:
            type: object
            properties:
                libraryItemId:
                    description: The ID of the library item the playlist item is for.
                    type: string
                episodeId:
                    nullable: true
                    description: The ID of the podcast episode the playlist item is for.
                    type: string
        BatchAddItemsRequest:
            type: object
            properties:
                items:
                    description: The items to add to the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItem'
        BatchRemoveItemsRequest:
            type: object
            properties:
                items:
                    description: The items to remove from the playlist.
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaylistItem'
        GetListeningSessionsResponse:
            type: object
            properties:
                total:
                    description: The total number of listening sessions.
                    type: integer
                numPages:
                    description: The total number of pages.
                    type: integer
                itemsPerPage:
                    description: The provided itemsPerPage parameter.
                    type: integer
                sessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaybackSession'
        GetListeningStatsResponse:
            type: object
            properties:
                totalTime:
                    description: The total time (in seconds) you have listened to library items.
                    type: integer
                items:
                    type: object
                    additionalProperties:
                        type: object
                        properties:
                            id:
                                description: The ID of the library item you listened to.
                                type: string
                            timeListening:
                                description: The time (in seconds) you listened to the library item.
                                type: integer
                            mediaMetadata:
                                $ref: '#/components/schemas/BookMetadata'
                days:
                    type: object
                    additionalProperties:
                        description: The total time you have listened to library items on each day.
                        type: integer
                dayOfWeek:
                    type: object
                    additionalProperties:
                        description: The total time you have listened to library items on each day of the week.
                        type: integer
                today:
                    description: The time (in seconds) you have listened to library items today.
                    type: integer
                recentSessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/PlaybackSession'
        GetItemsInProgressResponse:
            type: object
            properties:
                libraryItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/LibraryItemInProgress'
        BatchUpdateMediaProgressRequest:
            type: array
            items:
                type: object
                properties:
                    libraryItemId:
                        description: The ID of the library item the media progress is for.
                        type: string
                    episodeId:
                        nullable: true
                        description: The ID of the podcast episode the media progress is for.
                        type: string
                    duration:
                        format: float
                        description: The total duration (in seconds) of the media.
                        type: number
                    progress:
                        format: float
                        description: The percentage completion progress of the media.
                        type: number
                    currentTime:
                        format: float
                        description: The current time (in seconds) of your progress.
                        type: number
                    isFinished:
                        description: Whether the media is finished.
                        type: boolean
                    hideFromContinueListening:
                        description: Whether the media will be hidden from the "Continue Listening" shelf.
                        type: boolean
                    finishedAt:
                        nullable: true
                        format: int64
                        description: The time (in ms since POSIX epoch) when the user finished the media.
                        type: integer
                    startedAt:
                        format: int64
                        description: The time (in ms since POSIX epoch) when the user started consuming the media.
                        type: integer
        UpdateMediaProgressRequest:
            type: object
            properties:
                duration:
                    format: float
                    description: The total duration (in seconds) of the media.
                    type: number
                progress:
                    format: float
                    description: The percentage completion progress of the media.
                    type: number
                currentTime:
                    format: float
                    description: The current time (in seconds) of your progress.
                    type: number
                isFinished:
                    description: Whether the media is finished.
                    type: boolean
                hideFromContinueListening:
                    description: Whether the media will be hidden from the "Continue Listening" shelf.
                    type: boolean
                finishedAt:
                    nullable: true
                    format: int64
                    description: The time (in ms since POSIX epoch) when the user finished the media.
                    type: integer
                startedAt:
                    format: int64
                    description: The time (in ms since POSIX epoch) when the user started consuming the media.
                    type: integer
        CreateBookmarkRequest:
            type: object
            properties:
                time:
                    description: The time (in seconds) in the book to create the bookmark at.
                    type: integer
                title:
                    description: The title of the bookmark.
                    type: string
        UpdateBookmarkRequest:
            type: object
            properties:
                time:
                    description: The time (in seconds) of the bookmark.
                    type: integer
                title:
                    description: The title of the bookmark.
                    type: string
        ChangePasswordRequest:
            type: object
            properties:
                password:
                    description: Your current password.
                    type: string
                newPassword:
                    description: Your new password.
                    type: string
        ChangePasswordResponse:
            type: object
            properties:
                success:
                    description: Will only exist and be true if the password was updated successfully.
                    type: boolean
                error:
                    description: The error that occurred. Will only exist if there was an error updating your password.
                    type: string
        SyncLocalProgressRequest:
            type: object
            properties:
                localMediaProgress:
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgress'
        SyncLocalProgressResponse:
            type: object
            properties:
                numServerProgressUpdates:
                    description: The number of media progress items that were updated on the server.
                    type: integer
                localProgressUpdates:
                    description: >-
                        Local media progress items with updated information from the server (server more
                        recent).
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgress'
                serverProgressUpdates:
                    description: Media progress items that were updated on the server (local more recent).
                    type: array
                    items:
                        $ref: '#/components/schemas/MediaProgress'
    securitySchemes:
        bearerAuth:
            scheme: bearer
            bearerFormat: JWT
            type: http
